"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @prettier
 */
const sdk_coin_ada_1 = require("@bitgo/sdk-coin-ada");
const sdk_coin_algo_1 = require("@bitgo/sdk-coin-algo");
const sdk_coin_bcha_1 = require("@bitgo/sdk-coin-bcha");
const sdk_coin_hbar_1 = require("@bitgo/sdk-coin-hbar");
const sdk_coin_near_1 = require("@bitgo/sdk-coin-near");
const sdk_coin_sol_1 = require("@bitgo/sdk-coin-sol");
const sdk_coin_trx_1 = require("@bitgo/sdk-coin-trx");
const sdk_core_1 = require("@bitgo/sdk-core");
const config_1 = require("../config");
const coins_1 = require("./coins");
function registerCoinConstructors(globalCoinFactory) {
    globalCoinFactory.register('ada', coins_1.Ada.createInstance);
    globalCoinFactory.register('algo', coins_1.Algo.createInstance);
    globalCoinFactory.register('arbeth', coins_1.Arbeth.createInstance);
    globalCoinFactory.register('atom', coins_1.Atom.createInstance);
    globalCoinFactory.register('avaxc', coins_1.AvaxC.createInstance);
    globalCoinFactory.register('avaxp', coins_1.AvaxP.createInstance);
    globalCoinFactory.register('bch', coins_1.Bch.createInstance);
    globalCoinFactory.register('bcha', sdk_coin_bcha_1.Bcha.createInstance);
    globalCoinFactory.register('bera', coins_1.Bera.createInstance);
    globalCoinFactory.register('bld', coins_1.Bld.createInstance);
    globalCoinFactory.register('bsc', coins_1.Bsc.createInstance);
    globalCoinFactory.register('bsv', coins_1.Bsv.createInstance);
    globalCoinFactory.register('btc', coins_1.Btc.createInstance);
    globalCoinFactory.register('btg', coins_1.Btg.createInstance);
    globalCoinFactory.register('celo', coins_1.Celo.createInstance);
    globalCoinFactory.register('core', coins_1.Core.createInstance);
    globalCoinFactory.register('cspr', coins_1.Cspr.createInstance);
    globalCoinFactory.register('dash', coins_1.Dash.createInstance);
    globalCoinFactory.register('doge', coins_1.Doge.createInstance);
    globalCoinFactory.register('dot', coins_1.Dot.createInstance);
    globalCoinFactory.register('eos', coins_1.Eos.createInstance);
    globalCoinFactory.register('etc', coins_1.Etc.createInstance);
    globalCoinFactory.register('eth', coins_1.Eth.createInstance);
    globalCoinFactory.register('eth2', coins_1.Eth2.createInstance);
    globalCoinFactory.register('ethw', coins_1.Ethw.createInstance);
    globalCoinFactory.register('fiateur', coins_1.FiatEur.createInstance);
    globalCoinFactory.register('fiatgbp', coins_1.FiatGBP.createInstance);
    globalCoinFactory.register('fiatusd', coins_1.FiatUsd.createInstance);
    globalCoinFactory.register('gteth', coins_1.Gteth.createInstance);
    globalCoinFactory.register('hash', coins_1.Hash.createInstance);
    globalCoinFactory.register('hbar', coins_1.Hbar.createInstance);
    globalCoinFactory.register('hteth', coins_1.Hteth.createInstance);
    globalCoinFactory.register('ltc', coins_1.Ltc.createInstance);
    globalCoinFactory.register('injective', coins_1.Injective.createInstance);
    globalCoinFactory.register('islm', coins_1.Islm.createInstance);
    globalCoinFactory.register('near', sdk_coin_near_1.Near.createInstance);
    globalCoinFactory.register('ofc', coins_1.Ofc.createInstance);
    globalCoinFactory.register('opeth', coins_1.Opeth.createInstance);
    globalCoinFactory.register('osmo', coins_1.Osmo.createInstance);
    globalCoinFactory.register('polygon', coins_1.Polygon.createInstance);
    globalCoinFactory.register('rbtc', coins_1.Rbtc.createInstance);
    globalCoinFactory.register('sei', coins_1.Sei.createInstance);
    globalCoinFactory.register('sol', coins_1.Sol.createInstance);
    globalCoinFactory.register('stx', coins_1.Stx.createInstance);
    globalCoinFactory.register('sui', coins_1.Sui.createInstance);
    globalCoinFactory.register('susd', coins_1.Susd.createInstance);
    globalCoinFactory.register('tia', coins_1.Tia.createInstance);
    globalCoinFactory.register('ton', coins_1.Ton.createInstance);
    globalCoinFactory.register('talgo', coins_1.Talgo.createInstance);
    globalCoinFactory.register('tarbeth', coins_1.Tarbeth.createInstance);
    globalCoinFactory.register('tada', coins_1.Tada.createInstance);
    globalCoinFactory.register('tatom', coins_1.Tatom.createInstance);
    globalCoinFactory.register('tavaxc', coins_1.TavaxC.createInstance);
    globalCoinFactory.register('tavaxp', coins_1.TavaxP.createInstance);
    globalCoinFactory.register('tbch', coins_1.Tbch.createInstance);
    globalCoinFactory.register('tbcha', sdk_coin_bcha_1.Tbcha.createInstance);
    globalCoinFactory.register('tbera', coins_1.Tbera.createInstance);
    globalCoinFactory.register('tbld', coins_1.Tbld.createInstance);
    globalCoinFactory.register('tbsc', coins_1.Tbsc.createInstance);
    globalCoinFactory.register('tbsv', coins_1.Tbsv.createInstance);
    globalCoinFactory.register('tbtc', coins_1.Tbtc.createInstance);
    globalCoinFactory.register('tcelo', coins_1.Tcelo.createInstance);
    globalCoinFactory.register('tcore', coins_1.Tcore.createInstance);
    globalCoinFactory.register('tcspr', coins_1.Tcspr.createInstance);
    globalCoinFactory.register('tdash', coins_1.Tdash.createInstance);
    globalCoinFactory.register('tdoge', coins_1.Tdoge.createInstance);
    globalCoinFactory.register('tdot', coins_1.Tdot.createInstance);
    globalCoinFactory.register('teos', coins_1.Teos.createInstance);
    globalCoinFactory.register('tetc', coins_1.Tetc.createInstance);
    globalCoinFactory.register('teth', coins_1.Teth.createInstance);
    globalCoinFactory.register('teth2', coins_1.Teth2.createInstance);
    globalCoinFactory.register('tfiateur', coins_1.TfiatEur.createInstance);
    globalCoinFactory.register('tfiatgbp', coins_1.TfiatGBP.createInstance);
    globalCoinFactory.register('tfiatusd', coins_1.TfiatUsd.createInstance);
    globalCoinFactory.register('thash', coins_1.Thash.createInstance);
    globalCoinFactory.register('thbar', coins_1.Thbar.createInstance);
    globalCoinFactory.register('tinjective', coins_1.Tinjective.createInstance);
    globalCoinFactory.register('tislm', coins_1.Tislm.createInstance);
    globalCoinFactory.register('tltc', coins_1.Tltc.createInstance);
    globalCoinFactory.register('tnear', sdk_coin_near_1.TNear.createInstance);
    globalCoinFactory.register('topeth', coins_1.Topeth.createInstance);
    globalCoinFactory.register('tosmo', coins_1.Tosmo.createInstance);
    globalCoinFactory.register('tpolygon', coins_1.Tpolygon.createInstance);
    globalCoinFactory.register('trbtc', coins_1.Trbtc.createInstance);
    globalCoinFactory.register('trx', coins_1.Trx.createInstance);
    globalCoinFactory.register('tsei', coins_1.Tsei.createInstance);
    globalCoinFactory.register('tsol', coins_1.Tsol.createInstance);
    globalCoinFactory.register('tstx', coins_1.Tstx.createInstance);
    globalCoinFactory.register('tsui', coins_1.Tsui.createInstance);
    globalCoinFactory.register('tsusd', coins_1.Tsusd.createInstance);
    globalCoinFactory.register('ttia', coins_1.Ttia.createInstance);
    globalCoinFactory.register('tton', coins_1.Tton.createInstance);
    globalCoinFactory.register('ttrx', coins_1.Ttrx.createInstance);
    globalCoinFactory.register('txlm', coins_1.Txlm.createInstance);
    globalCoinFactory.register('txrp', coins_1.Txrp.createInstance);
    globalCoinFactory.register('txtz', coins_1.Txtz.createInstance);
    globalCoinFactory.register('tzec', coins_1.Tzec.createInstance);
    globalCoinFactory.register('tzeta', coins_1.Tzeta.createInstance);
    globalCoinFactory.register('xlm', coins_1.Xlm.createInstance);
    globalCoinFactory.register('xrp', coins_1.Xrp.createInstance);
    globalCoinFactory.register('xtz', coins_1.Xtz.createInstance);
    globalCoinFactory.register('zec', coins_1.Zec.createInstance);
    globalCoinFactory.register('zeta', coins_1.Zeta.createInstance);
    coins_1.Erc20Token.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.StellarToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    for (const ofcToken of [...config_1.tokens.bitcoin.ofc.tokens, ...config_1.tokens.testnet.ofc.tokens]) {
        const tokenConstructor = coins_1.OfcToken.createTokenConstructor(ofcToken);
        globalCoinFactory.register(ofcToken.type, tokenConstructor);
    }
    coins_1.CeloToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.BscToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.EosToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    sdk_coin_algo_1.AlgoToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.AvaxCToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.PolygonToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    coins_1.ArbethToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    sdk_coin_sol_1.SolToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    sdk_coin_hbar_1.HbarToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    sdk_coin_trx_1.TrxToken.createTokenConstructors().forEach(({ name, coinConstructor }) => {
        globalCoinFactory.register(name, coinConstructor);
    });
    sdk_coin_ada_1.AdaToken.createTokenConstructors().forEach(({ name, coinConstructor }) => globalCoinFactory.register(name, coinConstructor));
}
const GlobalCoinFactory = new sdk_core_1.CoinFactory();
registerCoinConstructors(GlobalCoinFactory);
exports.default = GlobalCoinFactory;
//# sourceMappingURL=data:application/json;base64,