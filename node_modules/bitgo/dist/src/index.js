"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetworkObj = exports.getNetwork = exports.setNetwork = exports.GlobalCoinFactory = exports.Environments = exports.Buffer = exports.sjcl = exports.bitcoin = void 0;
/**
 * @prettier
 */
//
// index.js - Module definition for BitGoJS
//
// Copyright 2022, BitGo, Inc.  All Rights Reserved.
//
const _ = require("lodash");
const sdk_core_1 = require("@bitgo/sdk-core");
__exportStar(require("@bitgo/sdk-api"), exports);
const utxolib = require("@bitgo/utxo-lib");
const coinFactory_1 = require("./v2/coinFactory");
exports.GlobalCoinFactory = coinFactory_1.default;
__exportStar(require("./bitgo"), exports);
// Expose legacy "bitcoin" API (mostly HDNode)
/** @deprecated */
var sdk_core_2 = require("@bitgo/sdk-core");
Object.defineProperty(exports, "bitcoin", { enumerable: true, get: function () { return sdk_core_2.bitcoin; } });
/** @deprecated */
exports.sjcl = require('@bitgo/sjcl');
var buffer_1 = require("buffer");
Object.defineProperty(exports, "Buffer", { enumerable: true, get: function () { return buffer_1.Buffer; } });
exports.Environments = _.cloneDeep(sdk_core_1.common.Environments);
__exportStar(require("@bitgo/sdk-core"), exports);
__exportStar(require("./v2"), exports);
/**
 * Set the network, i.e. either "bitcoin" for production with real bitcoin, or
 * "testnet" for development with testnet bitcoin.
 *
 * @deprecated
 */
function setNetwork(network) {
    sdk_core_1.common.setNetwork(network);
}
exports.setNetwork = setNetwork;
/**
 * Get the network. Returns either "bitcoin" or "testnet".
 *
 * @deprecated
 */
function getNetwork() {
    return sdk_core_1.common.getNetwork();
}
exports.getNetwork = getNetwork;
/**
 * @deprecated
 */
function getNetworkObj() {
    return utxolib.networks[sdk_core_1.common.getNetwork()];
}
exports.getNetworkObj = getNetworkObj;
setNetwork('testnet');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztHQUVHO0FBQ0gsRUFBRTtBQUNGLDJDQUEyQztBQUMzQyxFQUFFO0FBQ0Ysb0RBQW9EO0FBQ3BELEVBQUU7QUFDRiw0QkFBNEI7QUFDNUIsOENBQXlDO0FBQ3pDLGlEQUErQjtBQUMvQiwyQ0FBMkM7QUFDM0Msa0RBQWlEO0FBZXhDLDRCQWZGLHFCQUFpQixDQWVFO0FBYjFCLDBDQUF3QjtBQUV4Qiw4Q0FBOEM7QUFDOUMsa0JBQWtCO0FBQ2xCLDRDQUEwQztBQUFqQyxtR0FBQSxPQUFPLE9BQUE7QUFFaEIsa0JBQWtCO0FBQ0wsUUFBQSxJQUFJLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRTNDLGlDQUFnQztBQUF2QixnR0FBQSxNQUFNLE9BQUE7QUFFRixRQUFBLFlBQVksR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLGlCQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDN0Qsa0RBQWdDO0FBRWhDLHVDQUFxQjtBQUVyQjs7Ozs7R0FLRztBQUNILFNBQWdCLFVBQVUsQ0FBQyxPQUFPO0lBQ2hDLGlCQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLENBQUM7QUFGRCxnQ0FFQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQixVQUFVO0lBQ3hCLE9BQU8saUJBQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBRkQsZ0NBRUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLGFBQWE7SUFDM0IsT0FBTyxPQUFPLENBQUMsUUFBUSxDQUFDLGlCQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRkQsc0NBRUM7QUFFRCxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcmV0dGllclxuICovXG4vL1xuLy8gaW5kZXguanMgLSBNb2R1bGUgZGVmaW5pdGlvbiBmb3IgQml0R29KU1xuLy9cbi8vIENvcHlyaWdodCAyMDIyLCBCaXRHbywgSW5jLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vXG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBjb21tb24gfSBmcm9tICdAYml0Z28vc2RrLWNvcmUnO1xuZXhwb3J0ICogZnJvbSAnQGJpdGdvL3Nkay1hcGknO1xuaW1wb3J0ICogYXMgdXR4b2xpYiBmcm9tICdAYml0Z28vdXR4by1saWInO1xuaW1wb3J0IEdsb2JhbENvaW5GYWN0b3J5IGZyb20gJy4vdjIvY29pbkZhY3RvcnknO1xuXG5leHBvcnQgKiBmcm9tICcuL2JpdGdvJztcblxuLy8gRXhwb3NlIGxlZ2FjeSBcImJpdGNvaW5cIiBBUEkgKG1vc3RseSBIRE5vZGUpXG4vKiogQGRlcHJlY2F0ZWQgKi9cbmV4cG9ydCB7IGJpdGNvaW4gfSBmcm9tICdAYml0Z28vc2RrLWNvcmUnO1xuXG4vKiogQGRlcHJlY2F0ZWQgKi9cbmV4cG9ydCBjb25zdCBzamNsID0gcmVxdWlyZSgnQGJpdGdvL3NqY2wnKTtcblxuZXhwb3J0IHsgQnVmZmVyIH0gZnJvbSAnYnVmZmVyJztcblxuZXhwb3J0IGNvbnN0IEVudmlyb25tZW50cyA9IF8uY2xvbmVEZWVwKGNvbW1vbi5FbnZpcm9ubWVudHMpO1xuZXhwb3J0ICogZnJvbSAnQGJpdGdvL3Nkay1jb3JlJztcbmV4cG9ydCB7IEdsb2JhbENvaW5GYWN0b3J5IH07XG5leHBvcnQgKiBmcm9tICcuL3YyJztcblxuLyoqXG4gKiBTZXQgdGhlIG5ldHdvcmssIGkuZS4gZWl0aGVyIFwiYml0Y29pblwiIGZvciBwcm9kdWN0aW9uIHdpdGggcmVhbCBiaXRjb2luLCBvclxuICogXCJ0ZXN0bmV0XCIgZm9yIGRldmVsb3BtZW50IHdpdGggdGVzdG5ldCBiaXRjb2luLlxuICpcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXROZXR3b3JrKG5ldHdvcmspIHtcbiAgY29tbW9uLnNldE5ldHdvcmsobmV0d29yayk7XG59XG5cbi8qKlxuICogR2V0IHRoZSBuZXR3b3JrLiBSZXR1cm5zIGVpdGhlciBcImJpdGNvaW5cIiBvciBcInRlc3RuZXRcIi5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV0d29yaygpIHtcbiAgcmV0dXJuIGNvbW1vbi5nZXROZXR3b3JrKCk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5ldHdvcmtPYmooKSB7XG4gIHJldHVybiB1dHhvbGliLm5ldHdvcmtzW2NvbW1vbi5nZXROZXR3b3JrKCldO1xufVxuXG5zZXROZXR3b3JrKCd0ZXN0bmV0Jyk7XG4iXX0=