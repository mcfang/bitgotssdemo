"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyPair = void 0;
const sdk_core_1 = require("@bitgo/sdk-core");
const amino_1 = require("@cosmjs/amino");
const abstract_cosmos_1 = require("@bitgo/abstract-cosmos");
const constants_1 = require("./constants");
/**
 * Coreum keys and address management.
 */
class KeyPair extends abstract_cosmos_1.CosmosKeyPair {
    constructor(source) {
        super(source);
    }
    /** @inheritdoc */
    getAddress(format = sdk_core_1.AddressFormat.mainnet) {
        const base64String = Buffer.from(this.getKeys().pub.slice(0, 66), 'hex').toString('base64');
        const address_prefix = format === sdk_core_1.AddressFormat.testnet ? constants_1.TESTNET_ADDRESS_PREFIX : constants_1.MAINNET_ADDRESS_PREFIX;
        return amino_1.pubkeyToAddress({
            type: 'tendermint/PubKeySecp256k1',
            value: base64String,
        }, address_prefix);
    }
}
exports.KeyPair = KeyPair;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5UGFpci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIva2V5UGFpci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBZ0U7QUFDaEUseUNBQWdEO0FBRWhELDREQUF1RDtBQUN2RCwyQ0FBNkU7QUFFN0U7O0dBRUc7QUFDSCxNQUFhLE9BQVEsU0FBUSwrQkFBYTtJQUN4QyxZQUFZLE1BQXVCO1FBQ2pDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQixDQUFDO0lBRUQsa0JBQWtCO0lBQ2xCLFVBQVUsQ0FBQyxTQUF3Qix3QkFBYSxDQUFDLE9BQU87UUFDdEQsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVGLE1BQU0sY0FBYyxHQUFHLE1BQU0sS0FBSyx3QkFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsa0NBQXNCLENBQUMsQ0FBQyxDQUFDLGtDQUFzQixDQUFDO1FBQzFHLE9BQU8sdUJBQWUsQ0FDcEI7WUFDRSxJQUFJLEVBQUUsNEJBQTRCO1lBQ2xDLEtBQUssRUFBRSxZQUFZO1NBQ3BCLEVBQ0QsY0FBYyxDQUNmLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUFqQkQsMEJBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5UGFpck9wdGlvbnMsIEFkZHJlc3NGb3JtYXQgfSBmcm9tICdAYml0Z28vc2RrLWNvcmUnO1xuaW1wb3J0IHsgcHVia2V5VG9BZGRyZXNzIH0gZnJvbSAnQGNvc21qcy9hbWlubyc7XG5cbmltcG9ydCB7IENvc21vc0tleVBhaXIgfSBmcm9tICdAYml0Z28vYWJzdHJhY3QtY29zbW9zJztcbmltcG9ydCB7IE1BSU5ORVRfQUREUkVTU19QUkVGSVgsIFRFU1RORVRfQUREUkVTU19QUkVGSVggfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQ29yZXVtIGtleXMgYW5kIGFkZHJlc3MgbWFuYWdlbWVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIEtleVBhaXIgZXh0ZW5kcyBDb3Ntb3NLZXlQYWlyIHtcbiAgY29uc3RydWN0b3Ioc291cmNlPzogS2V5UGFpck9wdGlvbnMpIHtcbiAgICBzdXBlcihzb3VyY2UpO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gIGdldEFkZHJlc3MoZm9ybWF0OiBBZGRyZXNzRm9ybWF0ID0gQWRkcmVzc0Zvcm1hdC5tYWlubmV0KTogc3RyaW5nIHtcbiAgICBjb25zdCBiYXNlNjRTdHJpbmcgPSBCdWZmZXIuZnJvbSh0aGlzLmdldEtleXMoKS5wdWIuc2xpY2UoMCwgNjYpLCAnaGV4JykudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgIGNvbnN0IGFkZHJlc3NfcHJlZml4ID0gZm9ybWF0ID09PSBBZGRyZXNzRm9ybWF0LnRlc3RuZXQgPyBURVNUTkVUX0FERFJFU1NfUFJFRklYIDogTUFJTk5FVF9BRERSRVNTX1BSRUZJWDtcbiAgICByZXR1cm4gcHVia2V5VG9BZGRyZXNzKFxuICAgICAge1xuICAgICAgICB0eXBlOiAndGVuZGVybWludC9QdWJLZXlTZWNwMjU2azEnLFxuICAgICAgICB2YWx1ZTogYmFzZTY0U3RyaW5nLFxuICAgICAgfSxcbiAgICAgIGFkZHJlc3NfcHJlZml4XG4gICAgKTtcbiAgfVxufVxuIl19