"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendTransactionRequest = void 0;
/* eslint no-redeclare: off */
const t = __importStar(require("io-ts"));
const BuildParams_1 = require("./BuildParams");
exports.SendTransactionRequest = t.exact(t.intersection([
    t.partial({
        otp: t.string,
        txHex: t.string,
        halfSigned: t.unknown,
        comment: t.unknown,
        suppressBroadcast: t.boolean,
        txRequestId: t.unknown,
        sequenceId: t.unknown,
        consolidateId: t.unknown,
        invoice: t.unknown,
        videoApprovers: t.array(t.unknown),
    }),
    BuildParams_1.BuildParams.type,
]));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VuZFRyYW5zYWN0aW9uUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9iaXRnby93YWxsZXQvU2VuZFRyYW5zYWN0aW9uUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOEJBQThCO0FBQzlCLHlDQUEyQjtBQUMzQiwrQ0FBNEM7QUFFL0IsUUFBQSxzQkFBc0IsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUMzQyxDQUFDLENBQUMsWUFBWSxDQUFDO0lBQ2IsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNSLEdBQUcsRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNiLEtBQUssRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNmLFVBQVUsRUFBRSxDQUFDLENBQUMsT0FBTztRQUNyQixPQUFPLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDbEIsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDNUIsV0FBVyxFQUFFLENBQUMsQ0FBQyxPQUFPO1FBQ3RCLFVBQVUsRUFBRSxDQUFDLENBQUMsT0FBTztRQUNyQixhQUFhLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDeEIsT0FBTyxFQUFFLENBQUMsQ0FBQyxPQUFPO1FBQ2xCLGNBQWMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7S0FDbkMsQ0FBQztJQUNGLHlCQUFXLENBQUMsSUFBSTtDQUNqQixDQUFDLENBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1yZWRlY2xhcmU6IG9mZiAqL1xuaW1wb3J0ICogYXMgdCBmcm9tICdpby10cyc7XG5pbXBvcnQgeyBCdWlsZFBhcmFtcyB9IGZyb20gJy4vQnVpbGRQYXJhbXMnO1xuXG5leHBvcnQgY29uc3QgU2VuZFRyYW5zYWN0aW9uUmVxdWVzdCA9IHQuZXhhY3QoXG4gIHQuaW50ZXJzZWN0aW9uKFtcbiAgICB0LnBhcnRpYWwoe1xuICAgICAgb3RwOiB0LnN0cmluZyxcbiAgICAgIHR4SGV4OiB0LnN0cmluZyxcbiAgICAgIGhhbGZTaWduZWQ6IHQudW5rbm93bixcbiAgICAgIGNvbW1lbnQ6IHQudW5rbm93bixcbiAgICAgIHN1cHByZXNzQnJvYWRjYXN0OiB0LmJvb2xlYW4sXG4gICAgICB0eFJlcXVlc3RJZDogdC51bmtub3duLFxuICAgICAgc2VxdWVuY2VJZDogdC51bmtub3duLFxuICAgICAgY29uc29saWRhdGVJZDogdC51bmtub3duLFxuICAgICAgaW52b2ljZTogdC51bmtub3duLFxuICAgICAgdmlkZW9BcHByb3ZlcnM6IHQuYXJyYXkodC51bmtub3duKSxcbiAgICB9KSxcbiAgICBCdWlsZFBhcmFtcy50eXBlLFxuICBdKVxuKTtcblxuZXhwb3J0IHR5cGUgU2VuZFRyYW5zYWN0aW9uUmVxdWVzdCA9IHQuVHlwZU9mPHR5cGVvZiBTZW5kVHJhbnNhY3Rpb25SZXF1ZXN0PjtcbiJdfQ==