import { DelegatorTxBuilder } from './delegatorTxBuilder';
import { BaseCoin } from '@bitgo/statics';
import { AddValidatorTx } from 'avalanche/dist/apis/platformvm';
import { TransactionType } from '@bitgo/sdk-core';
import { Tx, BaseTx } from './iface';
export declare class ValidatorTxBuilder extends DelegatorTxBuilder {
    protected _delegationFeeRate: number;
    /**
     * @param coinConfig
     */
    constructor(coinConfig: Readonly<BaseCoin>);
    /**
     * get transaction type
     * @protected
     */
    protected get transactionType(): TransactionType;
    /**
     * set the delegationFeeRate
     * @param value number
     */
    delegationFeeRate(value: number): this;
    /**
     * Validate that the delegation fee is at least the minDelegationFee
     * @param delegationFeeRate number
     */
    validateDelegationFeeRate(delegationFeeRate: number): void;
    /** @inheritdoc */
    initBuilder(tx: Tx): this;
    static verifyTxType(baseTx: BaseTx): baseTx is AddValidatorTx;
    verifyTxType(baseTx: BaseTx): baseTx is AddValidatorTx;
    /**
     * Build the validator transaction
     * @protected
     */
    protected buildAvaxTransaction(): void;
}
//# sourceMappingURL=validatorTxBuilder.d.ts.map