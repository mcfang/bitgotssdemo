"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseCoin = exports.BaseUnit = exports.KeyCurve = exports.UnderlyingAsset = exports.CoinFeature = exports.CoinFamily = exports.CoinKind = void 0;
const errors_1 = require("./errors");
var CoinKind;
(function (CoinKind) {
    CoinKind["CRYPTO"] = "crypto";
    CoinKind["FIAT"] = "fiat";
})(CoinKind = exports.CoinKind || (exports.CoinKind = {}));
/**
 * The coin family links related variants of a single coin together.
 *
 * Typically, each coin will have a testnet and mainnet variant,
 * and these will both have the same coin family.
 *
 * For example, the coins `btc` and `tbtc` both belong to the same family, `btc`.
 */
var CoinFamily;
(function (CoinFamily) {
    CoinFamily["ADA"] = "ada";
    CoinFamily["ALGO"] = "algo";
    CoinFamily["ARBETH"] = "arbeth";
    CoinFamily["ATOM"] = "atom";
    CoinFamily["AVAXC"] = "avaxc";
    CoinFamily["AVAXP"] = "avaxp";
    CoinFamily["BCH"] = "bch";
    CoinFamily["BCHA"] = "bcha";
    CoinFamily["BERA"] = "bera";
    CoinFamily["BLD"] = "bld";
    CoinFamily["BSC"] = "bsc";
    CoinFamily["BSV"] = "bsv";
    CoinFamily["BTC"] = "btc";
    CoinFamily["BTG"] = "btg";
    CoinFamily["CELO"] = "celo";
    CoinFamily["CORE"] = "core";
    CoinFamily["CSPR"] = "cspr";
    CoinFamily["DASH"] = "dash";
    CoinFamily["DOGE"] = "doge";
    CoinFamily["DOT"] = "dot";
    CoinFamily["ETH"] = "eth";
    CoinFamily["ETH2"] = "eth2";
    CoinFamily["ETHW"] = "ethw";
    CoinFamily["ETC"] = "etc";
    CoinFamily["EOS"] = "eos";
    CoinFamily["FIAT"] = "fiat";
    CoinFamily["HASH"] = "hash";
    CoinFamily["HBAR"] = "hbar";
    CoinFamily["INJECTIVE"] = "injective";
    CoinFamily["ISLM"] = "islm";
    CoinFamily["KAVA"] = "kava";
    CoinFamily["LTC"] = "ltc";
    CoinFamily["POLYGON"] = "polygon";
    CoinFamily["NEAR"] = "near";
    CoinFamily["OFC"] = "ofc";
    CoinFamily["OPETH"] = "opeth";
    CoinFamily["OSMO"] = "osmo";
    CoinFamily["RBTC"] = "rbtc";
    CoinFamily["SEI"] = "sei";
    CoinFamily["SOL"] = "sol";
    CoinFamily["SUI"] = "sui";
    CoinFamily["STX"] = "stx";
    CoinFamily["SUSD"] = "susd";
    CoinFamily["TIA"] = "tia";
    CoinFamily["TON"] = "ton";
    CoinFamily["TRX"] = "trx";
    CoinFamily["XLM"] = "xlm";
    CoinFamily["XRP"] = "xrp";
    CoinFamily["XTZ"] = "xtz";
    CoinFamily["ZEC"] = "zec";
    CoinFamily["ZETA"] = "zeta";
})(CoinFamily = exports.CoinFamily || (exports.CoinFamily = {}));
/**
 * Coin features are yes or no questions about what a coin requires or is capable of.
 *
 * This allows coin-agnostic handling of coin-specific features. This is designed
 * to replace checking the coin name against a whitelist of supported coins
 * before executing some coin-specific logic, and instead allows one to check if a
 * coin supports the coin-specific feature that the logic implements.
 */
var CoinFeature;
(function (CoinFeature) {
    /*
     * This coin supports creating wallets on different networks with the same keys. Only works for TSS account-base coins
     */
    CoinFeature["EVM_WALLET"] = "evm-wallet";
    /*
     * This coin supports creating an EVM transaction using Metamask Institutional (MMI).
     */
    CoinFeature["METAMASK_INSTITUTIONAL"] = "metamask-institutional";
    /*
     * The valueless transfer feature indicates that it is valid to send a transaction which moves zero units of the coin.
     *
     * An example is Ethereum, which uses zero value transactions to trigger contract calls.
     */
    CoinFeature["VALUELESS_TRANSFER"] = "valueless-transfer";
    /*
     * Transaction data means there can be arbitrary data encoded in a transaction.
     *
     * Ethereum contract call data is an example.
     */
    CoinFeature["TRANSACTION_DATA"] = "transaction-data";
    /*
     * Some coins have a higher precision range than IEEE 754 doubles, which are used to represent numbers in javascript.
     *
     * For these coins, we must use an arbitrary precision arithmetic library, and this feature indicates this requirement.
     */
    CoinFeature["REQUIRES_BIG_NUMBER"] = "requires-big-number";
    /*
     * RMG requires all wallets to have a backup key held by a BitGo approved Key Recovery Service (KRS)
     */
    CoinFeature["REQUIRES_KRS_BACKUP_KEY"] = "requires-krs-backup-key";
    /*
     * For customers which are not on a postpaid contract, we add an extra output to transactions which pays BitGo a fee.
     *
     * This fee is known as the "pay-as-you-go fee", or just "paygo" for short.
     *
     * Some coins are unable to create transactions with more than one output, so paygo outputs are not possible for these coins.
     */
    CoinFeature["PAYGO"] = "paygo";
    /*
     * Does this coin align with the unspent model?
     *
     * These are typically Bitcoin and forks of it, such as Litecoin and Bitcoin Cash.
     */
    CoinFeature["UNSPENT_MODEL"] = "unspent-model";
    /*
     * Does this coin align with the account model?
     *
     * Examples of this coin type are Ethereum, XRP, and Stellar
     */
    CoinFeature["ACCOUNT_MODEL"] = "account-model";
    /*
     * Does this coin support child-pays-for-parent transactions?
     *
     * These are special types of transactions which can accelerate the confirmation time
     * of another transaction which is stuck in the mempool due to low fees.
     *
     * This is only possible for coins which follow the unspent model (UTXO coins).
     */
    CoinFeature["CHILD_PAYS_FOR_PARENT"] = "cpfp";
    /*
     * Does this coin support tokens? These are distinct assets from the underlying coin, but run on the same network.
     *
     * For example, Ethereum's ERC 20 token standard means that it supports tokens, so it shall have this feature.
     */
    CoinFeature["SUPPORTS_TOKENS"] = "supports-tokens";
    /*
     * Are fees for transactions of this coin paid for by the Enterprise (eg, Enterprise gas tank)?
     */
    CoinFeature["ENTERPRISE_PAYS_FEES"] = "enterprise-pays-fees";
    /*
     * This coin requires that accounts keep a minimum balance as reserve
     */
    CoinFeature["REQUIRES_RESERVE"] = "requires-reserve";
    /**
     * @deprecated This property is no longer valid. Please select the following custody option based on the BitGo org:
     * * CUSTODY_BITGO_TRUST
     * * CUSTODY_BITGO_NEW_YORK
     * * CUSTODY_BITGO_GERMANY
     * * CUSTODY_BITGO_SWITZERLAND
     */
    CoinFeature["CUSTODY"] = "custody";
    /*
    This coin uses TSS for key creation and signing
     */
    CoinFeature["TSS"] = "tss";
    /*
     * This coin supports staking
     */
    CoinFeature["STAKING"] = "staking";
    /**
     * This coin is deprecated
     */
    CoinFeature["DEPRECATED"] = "deprecated";
    /**
     * This coin is a dummy object meant to be a placeholder for an unsupported token
     */
    CoinFeature["GENERIC_TOKEN"] = "genericToken";
    /*
     * This coin supports custody in BitGo Trust SD entities
     */
    CoinFeature["CUSTODY_BITGO_TRUST"] = "custody-bitgo-trust";
    /*
     * This coin supports custody in BitGo New York entities
     */
    CoinFeature["CUSTODY_BITGO_NEW_YORK"] = "custody-bitgo-new-york";
    /*
     * This coin supports custody in BitGo Germany entities
     */
    CoinFeature["CUSTODY_BITGO_GERMANY"] = "custody-bitgo-germany";
    /*
     * This coin supports custody in BitGo Switzerland entities
     */
    CoinFeature["CUSTODY_BITGO_SWITZERLAND"] = "custody-bitgo-switzerland";
    /*
     * This coin supports custody in BitGo Switzerland entities
     */
    CoinFeature["CUSTODY_BITGO_FRANKFURT"] = "custody-bitgo-frankfurt";
    /*
     * This coin supports custody in BitGo Sister Trust 1 entities
     */
    CoinFeature["CUSTODY_BITGO_SISTER_TRUST_ONE"] = "custody-bitgo-sister-trust-one";
    /*
     * This coin has transactions that expire after a certain amount of time.
     */
    CoinFeature["EXPIRING_TRANSACTIONS"] = "expiring-transactions";
    /**
     * This coin supports cold wallets that use a multisig signing protocol
     */
    CoinFeature["MULTISIG_COLD"] = "multisig-cold";
    /**
     * This coin supports cold wallets that use a TSS signing protocol
     */
    CoinFeature["TSS_COLD"] = "tss-cold";
    /**
     * This coin uses sha256 hash function for ECDSA TSS signatures
     */
    CoinFeature["SHA256_WITH_ECDSA_TSS"] = "sha256-with-ecdsa-tss";
    /**
     * This coin is cosmos like coin
     */
    CoinFeature["COSMOS_LIKE_COINS"] = "cosmos_like_coins";
    /**
     * This coin supports the ability to rebuild transactions on custody signing
     */
    CoinFeature["REBUILD_ON_CUSTODY_SIGNING"] = "rebuild-on-custody-signing";
    /**
     * This coin supports higher limit for tx request rebuild, which is 10 by default
     */
    CoinFeature["INCREASED_TX_REQUEST_REBUILD_LIMIT"] = "increased-tx-request-rebuild-limit";
})(CoinFeature = exports.CoinFeature || (exports.CoinFeature = {}));
/**
 * Some coins are representations of another underlying asset class. An example
 * is Wrapped Bitcoin, which represents Bitcoin on the Ethereum blockchain.
 *
 * For these coins, the `UnderlyingAsset` provides a link to the actual
 * asset for which the coin is a unit of account.
 */
var UnderlyingAsset;
(function (UnderlyingAsset) {
    UnderlyingAsset["ADA"] = "ada";
    UnderlyingAsset["ALGO"] = "algo";
    UnderlyingAsset["APE"] = "ape";
    UnderlyingAsset["API3"] = "api3";
    UnderlyingAsset["ARBETH"] = "arbeth";
    UnderlyingAsset["ATOM"] = "atom";
    UnderlyingAsset["AVAXC"] = "avaxc";
    UnderlyingAsset["AVAXP"] = "avaxp";
    UnderlyingAsset["AXL"] = "AXL";
    UnderlyingAsset["AXLV2"] = "axlv2";
    UnderlyingAsset["BCH"] = "bch";
    UnderlyingAsset["BCHA"] = "bcha";
    UnderlyingAsset["BERA"] = "bera";
    UnderlyingAsset["BLD"] = "bld";
    UnderlyingAsset["BSC"] = "bsc";
    UnderlyingAsset["BSV"] = "bsv";
    UnderlyingAsset["BTC"] = "btc";
    UnderlyingAsset["BTG"] = "btg";
    UnderlyingAsset["DASH"] = "dash";
    UnderlyingAsset["DOT"] = "dot";
    UnderlyingAsset["CELO"] = "celo";
    UnderlyingAsset["CORE"] = "core";
    UnderlyingAsset["CSPR"] = "cspr";
    UnderlyingAsset["ETH"] = "eth";
    UnderlyingAsset["ETH2"] = "eth2";
    UnderlyingAsset["ETHW"] = "ethw";
    UnderlyingAsset["ETC"] = "etc";
    UnderlyingAsset["EOS"] = "eos";
    UnderlyingAsset["ERD"] = "erd";
    UnderlyingAsset["EUR"] = "eur";
    UnderlyingAsset["EURCV"] = "eurcv";
    UnderlyingAsset["EUROC"] = "euroc";
    UnderlyingAsset["GBP"] = "gbp";
    UnderlyingAsset["GTC"] = "gtc";
    UnderlyingAsset["HASH"] = "hash";
    UnderlyingAsset["HBAR"] = "hbar";
    UnderlyingAsset["INJECTIVE"] = "injective";
    UnderlyingAsset["ISLM"] = "islm";
    UnderlyingAsset["KAVA"] = "kava";
    UnderlyingAsset["LTC"] = "ltc";
    UnderlyingAsset["NEAR"] = "near";
    UnderlyingAsset["OPETH"] = "opeth";
    UnderlyingAsset["OSMO"] = "osmo";
    UnderlyingAsset["POLYGON"] = "polygon";
    UnderlyingAsset["RBTC"] = "rbtc";
    UnderlyingAsset["SEI"] = "sei";
    UnderlyingAsset["SOL"] = "sol";
    UnderlyingAsset["SUI"] = "sui";
    UnderlyingAsset["STX"] = "stx";
    UnderlyingAsset["TESTCORE"] = "testcore";
    UnderlyingAsset["TIA"] = "tia";
    UnderlyingAsset["TON"] = "ton";
    UnderlyingAsset["TRX"] = "trx";
    UnderlyingAsset["USD"] = "usd";
    UnderlyingAsset["XLM"] = "xlm";
    UnderlyingAsset["XRP"] = "xrp";
    UnderlyingAsset["XTZ"] = "xtz";
    UnderlyingAsset["ZEC"] = "zec";
    UnderlyingAsset["ZETA"] = "zeta";
    // ERC 20 tokens
    UnderlyingAsset["1INCH"] = "1inch";
    UnderlyingAsset["1UP"] = "1up";
    UnderlyingAsset["AAVE"] = "aave";
    UnderlyingAsset["ABT"] = "abt";
    UnderlyingAsset["ACE"] = "ace";
    UnderlyingAsset["ACXT"] = "acxt";
    UnderlyingAsset["ACH"] = "ach";
    UnderlyingAsset["ADABEAR"] = "adabear";
    UnderlyingAsset["ADABULL"] = "adabull";
    UnderlyingAsset["AE"] = "ae";
    UnderlyingAsset["AERGO"] = "aergo";
    UnderlyingAsset["AERGO1"] = "aergo1";
    UnderlyingAsset["AGLD"] = "agld";
    UnderlyingAsset["AGWD"] = "agwd";
    UnderlyingAsset["AION"] = "aion";
    UnderlyingAsset["AJNA"] = "ajna";
    UnderlyingAsset["AKRO"] = "akro";
    UnderlyingAsset["ALCX"] = "alcx";
    UnderlyingAsset["ALDRIN"] = "aldrin";
    UnderlyingAsset["ALEPH"] = "aleph";
    UnderlyingAsset["ALGOBEAR"] = "algobear";
    UnderlyingAsset["ALGOBULL"] = "algobull";
    UnderlyingAsset["ALGOHEDGE"] = "algohedge";
    UnderlyingAsset["ALI"] = "ali";
    UnderlyingAsset["ALICE"] = "alice";
    UnderlyingAsset["ALK"] = "alk";
    UnderlyingAsset["ALM"] = "alm";
    UnderlyingAsset["ALPHA"] = "alpha";
    UnderlyingAsset["ALTBEAR"] = "altbear";
    UnderlyingAsset["ALTBULL"] = "altbull";
    UnderlyingAsset["ALTHEDGE"] = "althedge";
    UnderlyingAsset["AMKT"] = "amkt";
    UnderlyingAsset["AMN"] = "amn";
    UnderlyingAsset["AMO"] = "amo";
    UnderlyingAsset["AMP"] = "amp";
    UnderlyingAsset["AMPL"] = "ampl";
    UnderlyingAsset["AMON"] = "amon";
    UnderlyingAsset["AMPX"] = "ampx";
    UnderlyingAsset["ANA"] = "ana";
    UnderlyingAsset["ANKR"] = "ankr";
    UnderlyingAsset["ANKRETH"] = "ankreth";
    UnderlyingAsset["ANT"] = "ant";
    UnderlyingAsset["ANTV2"] = "antv2";
    UnderlyingAsset["AOA"] = "aoa";
    UnderlyingAsset["APPC"] = "appc";
    UnderlyingAsset["APT"] = "apt";
    UnderlyingAsset["AQT"] = "aqt";
    UnderlyingAsset["ARCT"] = "arct";
    UnderlyingAsset["ARCX"] = "arcx";
    UnderlyingAsset["ARTEQ"] = "arteq";
    UnderlyingAsset["ASD"] = "asd";
    UnderlyingAsset["AST"] = "ast";
    UnderlyingAsset["ATLAS"] = "atlas";
    UnderlyingAsset["ATOMBEAR"] = "atombear";
    UnderlyingAsset["ATOMBULL"] = "atombull";
    UnderlyingAsset["ATRI"] = "atri";
    UnderlyingAsset["AUDIO"] = "audio";
    UnderlyingAsset["AUDX"] = "audx";
    UnderlyingAsset["AUST"] = "aust";
    UnderlyingAsset["AXPR"] = "axpr";
    UnderlyingAsset["AXS"] = "axs";
    UnderlyingAsset["AXSV2"] = "axsv2";
    UnderlyingAsset["BADGER"] = "badger";
    UnderlyingAsset["BAL"] = "bal";
    UnderlyingAsset["BAND"] = "band";
    UnderlyingAsset["BAO"] = "bao";
    UnderlyingAsset["BASIC"] = "basic";
    UnderlyingAsset["BAT"] = "bat";
    UnderlyingAsset["BAX"] = "bax";
    UnderlyingAsset["BBSAMO"] = "bbsamo";
    UnderlyingAsset["BBX"] = "bbx";
    UnderlyingAsset["BCAP"] = "bcap";
    UnderlyingAsset["BCC"] = "bcc";
    UnderlyingAsset["BCHBEAR"] = "bchbear";
    UnderlyingAsset["BCHBULL"] = "bchbull";
    UnderlyingAsset["BCHHEDGE"] = "bchhedge";
    UnderlyingAsset["BCIO"] = "bcio";
    UnderlyingAsset["BCT"] = "bct";
    UnderlyingAsset["BEAR"] = "bear";
    UnderlyingAsset["BED"] = "bed";
    UnderlyingAsset["BEPRO"] = "bepro";
    UnderlyingAsset["BICO"] = "bico";
    UnderlyingAsset["BID"] = "bid";
    UnderlyingAsset["BIDL"] = "bidl";
    UnderlyingAsset["BIRD"] = "bird";
    UnderlyingAsset["BIT"] = "bit";
    UnderlyingAsset["BLT"] = "blt";
    UnderlyingAsset["BLUR"] = "blur";
    UnderlyingAsset["BNB"] = "bnb";
    UnderlyingAsset["BNBBEAR"] = "bnbbear";
    UnderlyingAsset["BNBBULL"] = "bnbbull";
    UnderlyingAsset["BNBHEDGE"] = "bnbhedge";
    UnderlyingAsset["BNK"] = "bnk";
    UnderlyingAsset["BNL"] = "bnl";
    UnderlyingAsset["BNT"] = "bnt";
    UnderlyingAsset["BNTY"] = "bnty";
    UnderlyingAsset["BOND"] = "bond";
    UnderlyingAsset["BOTTO"] = "botto";
    UnderlyingAsset["BLOCKS"] = "blocks";
    UnderlyingAsset["BOX"] = "box";
    UnderlyingAsset["BOBA"] = "boba";
    UnderlyingAsset["BRD"] = "brd";
    UnderlyingAsset["BRZ"] = "brz";
    UnderlyingAsset["BST"] = "bst";
    UnderlyingAsset["BSVBEAR"] = "bsvbear";
    UnderlyingAsset["BSVBULL"] = "bsvbull";
    UnderlyingAsset["BSVHEDGE"] = "bsvhedge";
    UnderlyingAsset["BSX"] = "bsx";
    UnderlyingAsset["BTMXBEAR"] = "btmxbear";
    UnderlyingAsset["BTRST"] = "btrst";
    UnderlyingAsset["BTT"] = "btt";
    UnderlyingAsset["BTU"] = "btu";
    UnderlyingAsset["BULL"] = "bull";
    UnderlyingAsset["BURP"] = "burp";
    UnderlyingAsset["BUSD"] = "busd";
    UnderlyingAsset["BUY"] = "buy";
    UnderlyingAsset["BPT"] = "bpt";
    UnderlyingAsset["BVOL"] = "bvol";
    UnderlyingAsset["BXX"] = "bxx";
    UnderlyingAsset["BXXV1"] = "bxxv1";
    UnderlyingAsset["BZZ"] = "bzz";
    UnderlyingAsset["C8P"] = "c8p";
    UnderlyingAsset["C98"] = "c98";
    UnderlyingAsset["CACXT"] = "cacxt";
    UnderlyingAsset["CADX"] = "cadx";
    UnderlyingAsset["CAG"] = "cag";
    UnderlyingAsset["CASH"] = "cash";
    UnderlyingAsset["CBAT"] = "cbat";
    UnderlyingAsset["CBC"] = "cbc";
    UnderlyingAsset["CBRL"] = "cbrl";
    UnderlyingAsset["CCAI"] = "ccai";
    UnderlyingAsset["CCT"] = "cct";
    UnderlyingAsset["CDAG"] = "cdag";
    UnderlyingAsset["CDAI"] = "cdai";
    UnderlyingAsset["CDT"] = "cdt";
    UnderlyingAsset["CEL"] = "cel";
    UnderlyingAsset["CELR"] = "celr";
    UnderlyingAsset["CERE"] = "cere";
    UnderlyingAsset["CETH"] = "ceth";
    UnderlyingAsset["CFX"] = "cfx";
    UnderlyingAsset["CHO"] = "cho";
    UnderlyingAsset["CHFX"] = "chfx";
    UnderlyingAsset["CHR"] = "chr";
    UnderlyingAsset["CHSB"] = "chsb";
    UnderlyingAsset["CHZ"] = "chz";
    UnderlyingAsset["CIX100"] = "cix100";
    UnderlyingAsset["CLIQ"] = "cliq";
    UnderlyingAsset["CLN"] = "cln";
    UnderlyingAsset["CLT"] = "clt";
    UnderlyingAsset["CLV"] = "clv";
    UnderlyingAsset["CMFI"] = "cmfi";
    UnderlyingAsset["CNG"] = "cng";
    UnderlyingAsset["CNYX"] = "cnyx";
    UnderlyingAsset["COMP"] = "comp";
    UnderlyingAsset["CONV"] = "conv";
    UnderlyingAsset["COPE"] = "cope";
    UnderlyingAsset["COTI"] = "coti";
    UnderlyingAsset["COVER"] = "cover";
    UnderlyingAsset["COW"] = "cow";
    UnderlyingAsset["CPAY"] = "cpay";
    UnderlyingAsset["CPLT"] = "cplt";
    UnderlyingAsset["CPOOL"] = "cpool";
    UnderlyingAsset["CQT"] = "cqt";
    UnderlyingAsset["CQX"] = "cqx";
    UnderlyingAsset["CRA"] = "cra";
    UnderlyingAsset["CRDT"] = "crdt";
    UnderlyingAsset["CRE"] = "cre";
    UnderlyingAsset["CREAM"] = "cream";
    UnderlyingAsset["CREP"] = "crep";
    UnderlyingAsset["CRO"] = "cro";
    UnderlyingAsset["CRV"] = "crv";
    UnderlyingAsset["CRPT"] = "crpt";
    UnderlyingAsset["CRPT1"] = "crpt1";
    UnderlyingAsset["CSLV"] = "cslv";
    UnderlyingAsset["CSOL"] = "csol";
    UnderlyingAsset["CSP"] = "csp";
    UnderlyingAsset["CTSI"] = "ctsi";
    UnderlyingAsset["CUSD"] = "cusd";
    UnderlyingAsset["CUSDC"] = "cusdc";
    UnderlyingAsset["CWAR"] = "cwar";
    UnderlyingAsset["CWBTC"] = "cwbtc";
    UnderlyingAsset["CVC"] = "cvc";
    UnderlyingAsset["CVX"] = "cvx";
    UnderlyingAsset["CZRX"] = "czrx";
    UnderlyingAsset["DACXI"] = "dacxi";
    UnderlyingAsset["DAMM"] = "damm";
    UnderlyingAsset["DAI"] = "dai";
    UnderlyingAsset["DAO"] = "dao";
    UnderlyingAsset["DATA"] = "data";
    UnderlyingAsset["DATAV2"] = "datav2";
    UnderlyingAsset["DATAECON"] = "dataecon";
    UnderlyingAsset["DAWN"] = "dawn";
    UnderlyingAsset["DEC"] = "dec";
    UnderlyingAsset["DENT"] = "dent";
    UnderlyingAsset["DEP"] = "dep";
    UnderlyingAsset["DEXA"] = "dexa";
    UnderlyingAsset["DFD"] = "dfd";
    UnderlyingAsset["DFI"] = "dfi";
    UnderlyingAsset["DFL"] = "dfl";
    UnderlyingAsset["DGCL"] = "dgcl";
    UnderlyingAsset["DGD"] = "dgd";
    UnderlyingAsset["DGLD"] = "dgld";
    UnderlyingAsset["DGX"] = "dgx";
    UnderlyingAsset["DIGG"] = "digg";
    UnderlyingAsset["DIA"] = "dia";
    UnderlyingAsset["DING"] = "ding";
    UnderlyingAsset["DMG"] = "dmg";
    UnderlyingAsset["DMT"] = "dmt";
    UnderlyingAsset["DODO"] = "dodo";
    UnderlyingAsset["DOGE"] = "doge";
    UnderlyingAsset["DOGEBEAR"] = "dogebear";
    UnderlyingAsset["DOGEBULL"] = "dogebull";
    UnderlyingAsset["DPI"] = "dpi";
    UnderlyingAsset["DPX"] = "dpx";
    UnderlyingAsset["DRGNBEAR"] = "drgnbear";
    UnderlyingAsset["DRGNBULL"] = "drgnbull";
    UnderlyingAsset["DRPU"] = "drpu";
    UnderlyingAsset["DRV"] = "drv";
    UnderlyingAsset["DUC"] = "duc";
    UnderlyingAsset["DX1U"] = "dx1u";
    UnderlyingAsset["DXGT"] = "dxgt";
    UnderlyingAsset["DXPT"] = "dxpt";
    UnderlyingAsset["DXST"] = "dxst";
    UnderlyingAsset["DYDX"] = "dydx";
    UnderlyingAsset["DYN"] = "dyn";
    UnderlyingAsset["EASY"] = "easy";
    UnderlyingAsset["EBTCQ"] = "ebtcq";
    UnderlyingAsset["ECHT"] = "echt";
    UnderlyingAsset["ECOX"] = "ecox";
    UnderlyingAsset["EDEN"] = "eden";
    UnderlyingAsset["EDISON"] = "edison";
    UnderlyingAsset["EMB"] = "emb";
    UnderlyingAsset["EDN"] = "edn";
    UnderlyingAsset["EDR"] = "edr";
    UnderlyingAsset["EFI"] = "efi";
    UnderlyingAsset["EGL"] = "egl";
    UnderlyingAsset["EGLD"] = "egld";
    UnderlyingAsset["EGOLD"] = "egold";
    UnderlyingAsset["ELF"] = "elf";
    UnderlyingAsset["ELU"] = "elu";
    UnderlyingAsset["EMX"] = "emx";
    UnderlyingAsset["ENG"] = "eng";
    UnderlyingAsset["ENJ"] = "enj";
    UnderlyingAsset["ENS"] = "ens";
    UnderlyingAsset["EOSBEAR"] = "eosbear";
    UnderlyingAsset["EOSBULL"] = "eosbull";
    UnderlyingAsset["EOSHEDGE"] = "eoshedge";
    UnderlyingAsset["EQO"] = "eqo";
    UnderlyingAsset["ETA"] = "eta";
    UnderlyingAsset["ETHBULL"] = "ethbull";
    UnderlyingAsset["ETCBEAR"] = "etcbear";
    UnderlyingAsset["ETCBULL"] = "etcbull";
    UnderlyingAsset["ETHBEAR"] = "ethbear";
    UnderlyingAsset["ETHHEDGE"] = "ethhedge";
    UnderlyingAsset["ETHOS"] = "ethos";
    UnderlyingAsset["ETHX"] = "ethx";
    UnderlyingAsset["ETV"] = "etv";
    UnderlyingAsset["EUL"] = "eul";
    UnderlyingAsset["EURS"] = "eurs";
    UnderlyingAsset["EURST"] = "eurst";
    UnderlyingAsset["EURT"] = "eurt";
    UnderlyingAsset["EURX"] = "eurx";
    UnderlyingAsset["EUX"] = "eux";
    UnderlyingAsset["EVER"] = "ever";
    UnderlyingAsset["EVRY"] = "evry";
    UnderlyingAsset["EVX"] = "evx";
    UnderlyingAsset["EXE"] = "exe";
    UnderlyingAsset["FANT"] = "fant";
    UnderlyingAsset["FEI"] = "fei";
    UnderlyingAsset["FET"] = "fet";
    UnderlyingAsset["FET1"] = "fet1";
    UnderlyingAsset["FDT"] = "fdt";
    UnderlyingAsset["FF1"] = "ff1";
    UnderlyingAsset["FFT"] = "fft";
    UnderlyingAsset["FIDA"] = "fida";
    UnderlyingAsset["FIRE"] = "fire";
    UnderlyingAsset["FIXED"] = "fixed";
    UnderlyingAsset["FLIP"] = "flip";
    UnderlyingAsset["FLOKI"] = "floki";
    UnderlyingAsset["FLY"] = "fly";
    UnderlyingAsset["FMF"] = "fmf";
    UnderlyingAsset["FORT"] = "fort";
    UnderlyingAsset["FORTH"] = "forth";
    UnderlyingAsset["FOX"] = "fox";
    UnderlyingAsset["FRAX"] = "frax";
    UnderlyingAsset["FRONT"] = "front";
    UnderlyingAsset["FTM"] = "ftm";
    UnderlyingAsset["FTT"] = "ftt";
    UnderlyingAsset["FUN"] = "fun";
    UnderlyingAsset["FWB"] = "fwb";
    UnderlyingAsset["FXRT"] = "fxrt";
    UnderlyingAsset["FXS"] = "fxs";
    UnderlyingAsset["GAL"] = "gal";
    UnderlyingAsset["GALA"] = "gala";
    UnderlyingAsset["GALAV2"] = "galav2";
    UnderlyingAsset["GAMMA"] = "gamma";
    UnderlyingAsset["GARI"] = "gari";
    UnderlyingAsset["GATE"] = "gate";
    UnderlyingAsset["GBPT"] = "gbpt";
    UnderlyingAsset["GBPX"] = "gbpx";
    UnderlyingAsset["GDT"] = "gdt";
    UnderlyingAsset["GEC"] = "gec";
    UnderlyingAsset["GEN"] = "gen";
    UnderlyingAsset["GENE"] = "gene";
    UnderlyingAsset["GENIE"] = "genie";
    UnderlyingAsset["GFI"] = "gfi";
    UnderlyingAsset["GHUB"] = "ghub";
    UnderlyingAsset["GIGDROP"] = "gigdrop";
    UnderlyingAsset["GLDX"] = "gldx";
    UnderlyingAsset["GLM"] = "glm";
    UnderlyingAsset["GMT"] = "gmt";
    UnderlyingAsset["GNO"] = "gno";
    UnderlyingAsset["GNT"] = "gnt";
    UnderlyingAsset["GODS"] = "gods";
    UnderlyingAsset["GOHM"] = "gohm";
    UnderlyingAsset["GOG"] = "gog";
    UnderlyingAsset["GOLD"] = "gold";
    UnderlyingAsset["GOT"] = "got";
    UnderlyingAsset["GRT"] = "grt";
    UnderlyingAsset["GST"] = "gst";
    UnderlyingAsset["GT"] = "gt";
    UnderlyingAsset["GTAAVE18DP"] = "gtaave18dp";
    UnderlyingAsset["GTBAT18DP"] = "gtbat18dp";
    UnderlyingAsset["GTCOMP18DP"] = "gtcomp18dp";
    UnderlyingAsset["GTGRT18DP"] = "gtgrt18dp";
    UnderlyingAsset["GTLINK18DP"] = "gtlink18dp";
    UnderlyingAsset["GTMKR18DP"] = "gtmkr18dp";
    UnderlyingAsset["GTSNX18DP"] = "gtsnx18dp";
    UnderlyingAsset["GTUNI18DP"] = "gtuni18dp";
    UnderlyingAsset["GTUSDT6DP"] = "gtusdt6dp";
    UnderlyingAsset["GTYFI18DP"] = "gtyfi18dp";
    UnderlyingAsset["GTWBTC8DP"] = "gtwbtc8dp";
    UnderlyingAsset["GTO"] = "gto";
    UnderlyingAsset["GTERC2DP"] = "gterc2dp";
    UnderlyingAsset["GTERC6DP"] = "gterc6dp";
    UnderlyingAsset["GTERC18DP"] = "gterc18dp";
    UnderlyingAsset["GUSD"] = "gusd";
    UnderlyingAsset["GUSDT"] = "gusdt";
    UnderlyingAsset["GXC"] = "gxc";
    UnderlyingAsset["GYEN"] = "gyen";
    UnderlyingAsset["HBB"] = "hbb";
    UnderlyingAsset["HCN"] = "hcn";
    UnderlyingAsset["HDO"] = "hdo";
    UnderlyingAsset["HEDG"] = "hedg";
    UnderlyingAsset["HEDGE"] = "hedge";
    UnderlyingAsset["HFT"] = "hft";
    UnderlyingAsset["HGET"] = "hget";
    UnderlyingAsset["HKDX"] = "hkdx";
    UnderlyingAsset["HLC"] = "hlc";
    UnderlyingAsset["HMT"] = "hmt";
    UnderlyingAsset["HNT"] = "hnt";
    UnderlyingAsset["HOLD"] = "hold";
    UnderlyingAsset["HOLY"] = "holy";
    UnderlyingAsset["HOT"] = "hot";
    UnderlyingAsset["HQT"] = "hqt";
    UnderlyingAsset["HST"] = "hst";
    UnderlyingAsset["HT"] = "ht";
    UnderlyingAsset["HTBULL"] = "htbull";
    UnderlyingAsset["HUM"] = "hum";
    UnderlyingAsset["HUSD"] = "husd";
    UnderlyingAsset["HXRO"] = "hxro";
    UnderlyingAsset["HYB"] = "hyb";
    UnderlyingAsset["HYDRO"] = "hydro";
    UnderlyingAsset["I8"] = "i8";
    UnderlyingAsset["IBVOL"] = "ibvol";
    UnderlyingAsset["ICETH"] = "iceth";
    UnderlyingAsset["IDEX"] = "idex";
    UnderlyingAsset["IDRC"] = "idrc";
    UnderlyingAsset["IDRT"] = "idrt";
    UnderlyingAsset["IMX"] = "imx";
    UnderlyingAsset["IMXV2"] = "imxv2";
    UnderlyingAsset["INCX"] = "incx";
    UnderlyingAsset["IND"] = "ind";
    UnderlyingAsset["INDEX"] = "index";
    UnderlyingAsset["INDI"] = "indi";
    UnderlyingAsset["INF"] = "inf";
    UnderlyingAsset["INJ"] = "inj";
    UnderlyingAsset["INJV2"] = "injv2";
    UnderlyingAsset["INST"] = "inst";
    UnderlyingAsset["INV"] = "inv";
    UnderlyingAsset["INX"] = "inx";
    UnderlyingAsset["IP3"] = "ip3";
    UnderlyingAsset["ISF"] = "isf";
    UnderlyingAsset["ISR"] = "isr";
    UnderlyingAsset["IVO"] = "ivo";
    UnderlyingAsset["IVY"] = "ivy";
    UnderlyingAsset["JASMY"] = "jasmy";
    UnderlyingAsset["JBC"] = "jbc";
    UnderlyingAsset["JCR"] = "jcr";
    UnderlyingAsset["JCG"] = "jcg";
    UnderlyingAsset["JET"] = "jet";
    UnderlyingAsset["JFIN"] = "jfin";
    UnderlyingAsset["JPYX"] = "jpyx";
    UnderlyingAsset["JSOL"] = "jsol";
    UnderlyingAsset["KARATE"] = "karate";
    UnderlyingAsset["KEEP"] = "keep";
    UnderlyingAsset["KEY"] = "key";
    UnderlyingAsset["KIN"] = "kin";
    UnderlyingAsset["KIRO"] = "kiro";
    UnderlyingAsset["KITTY"] = "kitty";
    UnderlyingAsset["KNC"] = "knc";
    UnderlyingAsset["KNC2"] = "knc2";
    UnderlyingAsset["KOIN"] = "koin";
    UnderlyingAsset["KOZ"] = "koz";
    UnderlyingAsset["KP3R"] = "kp3r";
    UnderlyingAsset["KTRC"] = "ktrc";
    UnderlyingAsset["KZE"] = "kze";
    UnderlyingAsset["LAYER"] = "layer";
    UnderlyingAsset["LBA"] = "lba";
    UnderlyingAsset["LCX"] = "lcx";
    UnderlyingAsset["LDO"] = "ldo";
    UnderlyingAsset["LEND"] = "lend";
    UnderlyingAsset["LEO"] = "leo";
    UnderlyingAsset["LGO"] = "lgo";
    UnderlyingAsset["LIKE"] = "like";
    UnderlyingAsset["LINA"] = "lina";
    UnderlyingAsset["LINK"] = "link";
    UnderlyingAsset["LINKBEAR"] = "linkbear";
    UnderlyingAsset["LINKBULL"] = "linkbull";
    UnderlyingAsset["LION"] = "lion";
    UnderlyingAsset["LNC"] = "lnc";
    UnderlyingAsset["LOOKS"] = "looks";
    UnderlyingAsset["LOOM"] = "loom";
    UnderlyingAsset["LOOM1"] = "loom1";
    UnderlyingAsset["LOWB"] = "lowb";
    UnderlyingAsset["LQID"] = "lqid";
    UnderlyingAsset["LRC"] = "lrc";
    UnderlyingAsset["LRCV2"] = "lrcv2";
    UnderlyingAsset["LSETH"] = "lseth";
    UnderlyingAsset["LTCBEAR"] = "ltcbear";
    UnderlyingAsset["LTCBULL"] = "ltcbull";
    UnderlyingAsset["LUA"] = "lua";
    UnderlyingAsset["LUNA"] = "luna";
    UnderlyingAsset["LYN"] = "lyn";
    UnderlyingAsset["MAGIC"] = "magic";
    UnderlyingAsset["MANA"] = "mana";
    UnderlyingAsset["MAPS"] = "maps";
    UnderlyingAsset["MASK"] = "mask";
    UnderlyingAsset["MATH"] = "math";
    UnderlyingAsset["MATIC"] = "matic";
    UnderlyingAsset["MATICBEAR"] = "maticbear";
    UnderlyingAsset["MATICBULL"] = "maticbull";
    UnderlyingAsset["MATTER"] = "matter";
    UnderlyingAsset["MBS"] = "mbs";
    UnderlyingAsset["MCAU"] = "mcau";
    UnderlyingAsset["MCB"] = "mcb";
    UnderlyingAsset["MCDAI"] = "mcdai";
    UnderlyingAsset["MCO"] = "mco";
    UnderlyingAsset["MCO2"] = "mco2";
    UnderlyingAsset["MCS"] = "mcs";
    UnderlyingAsset["MCX"] = "mcx";
    UnderlyingAsset["MDFC"] = "mdfc";
    UnderlyingAsset["MDX"] = "mdx";
    UnderlyingAsset["MEAN"] = "mean";
    UnderlyingAsset["MEDIA"] = "media";
    UnderlyingAsset["MEDX"] = "medx";
    UnderlyingAsset["MEME"] = "meme";
    UnderlyingAsset["MER"] = "mer";
    UnderlyingAsset["MET"] = "met";
    UnderlyingAsset["META"] = "meta";
    UnderlyingAsset["METIS"] = "metis";
    UnderlyingAsset["MFG"] = "mfg";
    UnderlyingAsset["MFPH"] = "mfph";
    UnderlyingAsset["MFT"] = "mft";
    UnderlyingAsset["MIDBULL"] = "midbull";
    UnderlyingAsset["MILKV2"] = "milkv2";
    UnderlyingAsset["MIM"] = "mim";
    UnderlyingAsset["MIR"] = "mir";
    UnderlyingAsset["MITH"] = "mith";
    UnderlyingAsset["MIX"] = "mix";
    UnderlyingAsset["MIZN"] = "mizn";
    UnderlyingAsset["MKR"] = "mkr";
    UnderlyingAsset["MLN"] = "mln";
    UnderlyingAsset["MNS"] = "mns";
    UnderlyingAsset["MNT"] = "mnt";
    UnderlyingAsset["MNDE"] = "mnde";
    UnderlyingAsset["MOC"] = "moc";
    UnderlyingAsset["MOF"] = "mof";
    UnderlyingAsset["MNGO"] = "mngo";
    UnderlyingAsset["MPAY"] = "mpay";
    UnderlyingAsset["MPL"] = "mpl";
    UnderlyingAsset["MPLX"] = "mplx";
    UnderlyingAsset["MSOL"] = "msol";
    UnderlyingAsset["MTA"] = "mta";
    UnderlyingAsset["MTCN"] = "mtcn";
    UnderlyingAsset["MTL"] = "mtl";
    UnderlyingAsset["MUSD"] = "musd";
    UnderlyingAsset["MVL"] = "mvl";
    UnderlyingAsset["MVI"] = "mvi";
    UnderlyingAsset["MWT"] = "mwt";
    UnderlyingAsset["NAS"] = "nas";
    UnderlyingAsset["NCT"] = "nct";
    UnderlyingAsset["NDX"] = "ndx";
    UnderlyingAsset["NEU"] = "neu";
    UnderlyingAsset["NEXO"] = "nexo";
    UnderlyingAsset["NFTX"] = "nftx";
    UnderlyingAsset["NGNT"] = "ngnt";
    UnderlyingAsset["NIAX"] = "niax";
    UnderlyingAsset["NMR"] = "nmr";
    UnderlyingAsset["NOVA"] = "nova";
    UnderlyingAsset["NPXS"] = "npxs";
    UnderlyingAsset["NS2DRP"] = "ns2drp";
    UnderlyingAsset["NU"] = "nu";
    UnderlyingAsset["NYM"] = "nym";
    UnderlyingAsset["NZDX"] = "nzdx";
    UnderlyingAsset["OCEAN"] = "ocean";
    UnderlyingAsset["OCEANV2"] = "oceanv2";
    UnderlyingAsset["OGN"] = "ogn";
    UnderlyingAsset["OM"] = "om";
    UnderlyingAsset["OKB"] = "okb";
    UnderlyingAsset["OKBBULL"] = "okbbull";
    UnderlyingAsset["OMG"] = "omg";
    UnderlyingAsset["ONL"] = "onl";
    UnderlyingAsset["OP"] = "op";
    UnderlyingAsset["OPT"] = "opt";
    UnderlyingAsset["ORAI"] = "orai";
    UnderlyingAsset["ORBS"] = "orbs";
    UnderlyingAsset["ORCA"] = "orca";
    UnderlyingAsset["OUSG"] = "ousg";
    UnderlyingAsset["OXT"] = "oxt";
    UnderlyingAsset["OXY"] = "oxy";
    UnderlyingAsset["OHM"] = "ohm";
    UnderlyingAsset["PAI"] = "pai";
    UnderlyingAsset["PAR"] = "par";
    UnderlyingAsset["PASS"] = "pass";
    UnderlyingAsset["PAU"] = "pau";
    UnderlyingAsset["PAX"] = "pax";
    UnderlyingAsset["PAXG"] = "paxg";
    UnderlyingAsset["PAY"] = "pay";
    UnderlyingAsset["PBCH"] = "pbch";
    UnderlyingAsset["PDATA"] = "pdata";
    UnderlyingAsset["PDI"] = "pdi";
    UnderlyingAsset["PBTC"] = "pbtc";
    UnderlyingAsset["PEG"] = "peg";
    UnderlyingAsset["PEOPLE"] = "people";
    UnderlyingAsset["PEPE"] = "pepe";
    UnderlyingAsset["PERP"] = "perp";
    UnderlyingAsset["PETH"] = "peth";
    UnderlyingAsset["PHNX"] = "phnx";
    UnderlyingAsset["PIE"] = "pie";
    UnderlyingAsset["PLC"] = "plc";
    UnderlyingAsset["PFCT"] = "pfct";
    UnderlyingAsset["PLANET"] = "planet";
    UnderlyingAsset["PLNX"] = "plnx";
    UnderlyingAsset["PLX"] = "plx";
    UnderlyingAsset["PMA"] = "pma";
    UnderlyingAsset["POLIS"] = "polis";
    UnderlyingAsset["POLY"] = "poly";
    UnderlyingAsset["PORT"] = "port";
    UnderlyingAsset["POWR"] = "powr";
    UnderlyingAsset["PPT"] = "ppt";
    UnderlyingAsset["PRDX"] = "prdx";
    UnderlyingAsset["PRINTS"] = "prints";
    UnderlyingAsset["PRISM"] = "prism";
    UnderlyingAsset["PRO"] = "pro";
    UnderlyingAsset["PROM"] = "prom";
    UnderlyingAsset["PRT"] = "prt";
    UnderlyingAsset["PRTS"] = "prts";
    UnderlyingAsset["PSOL"] = "psol";
    UnderlyingAsset["PSTAKE"] = "pstake";
    UnderlyingAsset["PSY"] = "psy";
    UnderlyingAsset["PTU"] = "ptu";
    UnderlyingAsset["PUNDIX"] = "pundix";
    UnderlyingAsset["PUSD"] = "pusd";
    UnderlyingAsset["PXP"] = "pxp";
    UnderlyingAsset["PYR"] = "pyr";
    UnderlyingAsset["PYUSD"] = "pyusd";
    UnderlyingAsset["QASH"] = "qash";
    UnderlyingAsset["QCAD"] = "qcad";
    UnderlyingAsset["QUICK"] = "quick";
    UnderlyingAsset["QDT"] = "qdt";
    UnderlyingAsset["QKC"] = "qkc";
    UnderlyingAsset["QLINDO"] = "qlindo";
    UnderlyingAsset["QNT"] = "qnt";
    UnderlyingAsset["QRDO"] = "qrdo";
    UnderlyingAsset["QRL"] = "qrl";
    UnderlyingAsset["QSP"] = "qsp";
    UnderlyingAsset["QVT"] = "qvt";
    UnderlyingAsset["RAD"] = "rad";
    UnderlyingAsset["RAMP"] = "ramp";
    UnderlyingAsset["RARE"] = "rare";
    UnderlyingAsset["RARI"] = "rari";
    UnderlyingAsset["RAY"] = "ray";
    UnderlyingAsset["RCOIN"] = "rcoin";
    UnderlyingAsset["REAL"] = "real";
    UnderlyingAsset["RENDOGE"] = "rendoge";
    UnderlyingAsset["RBX"] = "rbx";
    UnderlyingAsset["RBY"] = "rby";
    UnderlyingAsset["RDN"] = "rdn";
    UnderlyingAsset["REB"] = "reb";
    UnderlyingAsset["REBL"] = "rebl";
    UnderlyingAsset["REEF"] = "reef";
    UnderlyingAsset["REN"] = "ren";
    UnderlyingAsset["REP"] = "rep";
    UnderlyingAsset["REPV2"] = "repv2";
    UnderlyingAsset["REQ"] = "REQ";
    UnderlyingAsset["RETH2"] = "reth2";
    UnderlyingAsset["RETH-H"] = "reth-h";
    UnderlyingAsset["RFOX"] = "rfox";
    UnderlyingAsset["RFR"] = "rfr";
    UnderlyingAsset["RFUEL"] = "rfuel";
    UnderlyingAsset["RGT"] = "rgt";
    UnderlyingAsset["RIF"] = "rif";
    UnderlyingAsset["RINGX"] = "ringx";
    UnderlyingAsset["RLC"] = "rlc";
    UnderlyingAsset["RLY"] = "rly";
    UnderlyingAsset["RNDR"] = "rndr";
    UnderlyingAsset["ROOK"] = "rook";
    UnderlyingAsset["RON"] = "ron";
    UnderlyingAsset["RONC"] = "ronc";
    UnderlyingAsset["ROOBEE"] = "roobee";
    UnderlyingAsset["RPL"] = "rpl";
    UnderlyingAsset["RSR"] = "rsr";
    UnderlyingAsset["RUBX"] = "rubx";
    UnderlyingAsset["RUEDATK"] = "ruedatk";
    UnderlyingAsset["RUN"] = "run";
    UnderlyingAsset["SAIL"] = "sail";
    UnderlyingAsset["SALT"] = "salt";
    UnderlyingAsset["SAND"] = "sand";
    UnderlyingAsset["SASHIMI"] = "sashimi";
    UnderlyingAsset["SAMO"] = "samo";
    UnderlyingAsset["SBC"] = "sbc";
    UnderlyingAsset["SBR"] = "sbr";
    // Saber IOU Token (Liquidity Mining Rewards)
    UnderlyingAsset["SBRIOU"] = "sbriou";
    UnderlyingAsset["SCNSOL"] = "scnsol";
    UnderlyingAsset["SCOPE"] = "scope";
    UnderlyingAsset["SD"] = "sd";
    UnderlyingAsset["SECO"] = "seco";
    UnderlyingAsset["SETH2"] = "seth2";
    UnderlyingAsset["SGA"] = "sga";
    UnderlyingAsset["SGDX"] = "sgdx";
    UnderlyingAsset["SGR"] = "sgr";
    UnderlyingAsset["SGT"] = "sgt";
    UnderlyingAsset["SHDW"] = "shdw";
    UnderlyingAsset["SHK"] = "shk";
    UnderlyingAsset["SHOPX"] = "shopx";
    UnderlyingAsset["SHIB"] = "shib";
    UnderlyingAsset["SHR"] = "shr";
    UnderlyingAsset["SIH"] = "sih";
    UnderlyingAsset["SILV"] = "silv";
    UnderlyingAsset["SIPHER"] = "sipher";
    UnderlyingAsset["SIS"] = "sis";
    UnderlyingAsset["SKALE"] = "skale";
    UnderlyingAsset["SLAB"] = "slab";
    UnderlyingAsset["SLC"] = "slc";
    UnderlyingAsset["SLCL"] = "slcl";
    UnderlyingAsset["SLND"] = "slnd";
    UnderlyingAsset["SLOT"] = "slot";
    UnderlyingAsset["SLP"] = "slp";
    UnderlyingAsset["SLRS"] = "slrs";
    UnderlyingAsset["SLVX"] = "slvx";
    UnderlyingAsset["SNC"] = "snc";
    UnderlyingAsset["SNOV"] = "snov";
    UnderlyingAsset["SNT"] = "snt";
    UnderlyingAsset["SNX"] = "snx";
    UnderlyingAsset["SNY"] = "sny";
    UnderlyingAsset["SOC"] = "soc";
    UnderlyingAsset["SOHM"] = "sohm";
    UnderlyingAsset["SOS"] = "sos";
    UnderlyingAsset["SPELL"] = "spell";
    UnderlyingAsset["SPO"] = "spo";
    UnderlyingAsset["SOLVE"] = "solve";
    UnderlyingAsset["SRNT"] = "srnt";
    UnderlyingAsset["SRM"] = "srm";
    UnderlyingAsset["STRK"] = "strk";
    UnderlyingAsset["STARS"] = "stars";
    UnderlyingAsset["STBU"] = "stbu";
    UnderlyingAsset["STC"] = "stc";
    UnderlyingAsset["STCV2"] = "stcv2";
    UnderlyingAsset["SETH-H"] = "seth-h";
    UnderlyingAsset["STEP"] = "step";
    UnderlyingAsset["STETH"] = "steth";
    UnderlyingAsset["STG"] = "stg";
    UnderlyingAsset["STKAAVE"] = "stkaave";
    UnderlyingAsset["STORE"] = "store";
    UnderlyingAsset["STORJ"] = "storj";
    UnderlyingAsset["STMX"] = "stmx";
    UnderlyingAsset["STORM"] = "storm";
    UnderlyingAsset["STSOL"] = "stsol";
    UnderlyingAsset["STZEN"] = "stzen";
    UnderlyingAsset["SUPER"] = "super";
    UnderlyingAsset["SUN"] = "sun";
    UnderlyingAsset["SUNNY"] = "sunny";
    UnderlyingAsset["SUSD"] = "susd";
    UnderlyingAsset["SUSHI"] = "sushi";
    UnderlyingAsset["SQUIG"] = "squig";
    UnderlyingAsset["SVT"] = "svt";
    UnderlyingAsset["SWAG"] = "swag";
    UnderlyingAsset["SWISE"] = "swice";
    UnderlyingAsset["SXP"] = "sxp";
    UnderlyingAsset["SYN"] = "syn";
    UnderlyingAsset["SYNTH-SUSD"] = "synth-susd";
    UnderlyingAsset["THRESHOLD"] = "threshold";
    UnderlyingAsset["THEU"] = "theu";
    UnderlyingAsset["TAUD"] = "taud";
    UnderlyingAsset["TBTC1"] = "tbtc1";
    UnderlyingAsset["TBTC2"] = "tbtc2";
    UnderlyingAsset["TCAD"] = "tcad";
    UnderlyingAsset["TCO"] = "tco";
    UnderlyingAsset["TEL"] = "tel";
    UnderlyingAsset["TEN"] = "ten";
    UnderlyingAsset["TENX"] = "tenx";
    UnderlyingAsset["TERC"] = "terc";
    UnderlyingAsset["TEUROC"] = "teuroc";
    UnderlyingAsset["TERC2DP"] = "terc2dp";
    UnderlyingAsset["TERC6DP"] = "terc6dp";
    UnderlyingAsset["TERC18DP"] = "terc18DP";
    UnderlyingAsset["TERC20"] = "terc20";
    UnderlyingAsset["TERC2DP1"] = "terc2dp1";
    UnderlyingAsset["TERC2DP2"] = "terc2dp2";
    UnderlyingAsset["TERC2DP3"] = "terc2dp3";
    UnderlyingAsset["TERC2DP4"] = "terc2dp4";
    UnderlyingAsset["TERC2DP5"] = "terc2dp5";
    UnderlyingAsset["TERC6DP1"] = "terc6dp1";
    UnderlyingAsset["TERC6DP2"] = "terc6dp2";
    UnderlyingAsset["TERC6DP3"] = "terc6dp3";
    UnderlyingAsset["TERC6DP4"] = "terc6dp4";
    UnderlyingAsset["TERC6DP5"] = "terc6dp5";
    UnderlyingAsset["TERC18DP1"] = "terc18dp1";
    UnderlyingAsset["TERC18DP2"] = "terc18dp2";
    UnderlyingAsset["TERC18DP3"] = "terc18dp3";
    UnderlyingAsset["TERC18DP4"] = "terc18dp4";
    UnderlyingAsset["TERC18DP5"] = "terc18dp5";
    UnderlyingAsset["TERC18DP6"] = "terc18dp6";
    UnderlyingAsset["TERC18DP7"] = "terc18dp7";
    UnderlyingAsset["TERC18DP8"] = "terc18dp8";
    UnderlyingAsset["TERC18DP9"] = "terc18dp9";
    UnderlyingAsset["TERC18DP10"] = "terc18dp10";
    UnderlyingAsset["TERC18DP11"] = "terc18dp11";
    UnderlyingAsset["TERC18DP12"] = "terc18dp12";
    UnderlyingAsset["TERC18DP13"] = "terc18dp13";
    UnderlyingAsset["TERC18DP14"] = "terc18dp14";
    UnderlyingAsset["TERC18DP15"] = "terc18dp15";
    UnderlyingAsset["TGBP"] = "tgbp";
    UnderlyingAsset["THKD"] = "thkd";
    UnderlyingAsset["TIOX"] = "tiox";
    UnderlyingAsset["TKMK"] = "tkmk";
    UnderlyingAsset["TKNT"] = "tknt";
    UnderlyingAsset["TKX"] = "tkx";
    UnderlyingAsset["TLAB"] = "tlab";
    UnderlyingAsset["TLM"] = "tlm";
    UnderlyingAsset["TLOS"] = "tlos";
    UnderlyingAsset["TMATIC"] = "tmatic";
    UnderlyingAsset["TNT"] = "tnt";
    UnderlyingAsset["TOMOBEAR"] = "tomobear";
    UnderlyingAsset["TOMOBULL"] = "tomobull";
    UnderlyingAsset["TOMOE"] = "tomoe";
    UnderlyingAsset["TOK"] = "tok";
    UnderlyingAsset["TONCOIN"] = "toncoin";
    UnderlyingAsset["TOPM"] = "topm";
    UnderlyingAsset["TRAC"] = "trac";
    UnderlyingAsset["TRAXX"] = "traxx";
    UnderlyingAsset["TRIBE"] = "tribe";
    UnderlyingAsset["TRL"] = "trl";
    UnderlyingAsset["TRST"] = "trst";
    UnderlyingAsset["TRU"] = "tru";
    UnderlyingAsset["TRXBEAR"] = "trxbear";
    UnderlyingAsset["TRXBULL"] = "trxbull";
    UnderlyingAsset["TRXHEDGE"] = "trxhedge";
    // Bilira
    UnderlyingAsset["TRYB"] = "tryb";
    // TRYB on Solana - https://solscan.io/token/6ry4WBDvAwAnrYJVv6MCog4J8zx6S3cPgSqnTsDZ73AR
    UnderlyingAsset["TRYB2"] = "tryb2";
    UnderlyingAsset["TRYX"] = "tryx";
    UnderlyingAsset["TULIP"] = "tulip";
    UnderlyingAsset["TUPOLIS"] = "tupolis";
    UnderlyingAsset["TUSD"] = "tusd";
    UnderlyingAsset["TUSRM"] = "tusrm";
    UnderlyingAsset["TWDOGE"] = "twdoge";
    UnderlyingAsset["TXL"] = "txl";
    UnderlyingAsset["UAIR"] = "uair";
    UnderlyingAsset["UBXT"] = "ubxt";
    UnderlyingAsset["UCO"] = "uco";
    UnderlyingAsset["UKG"] = "ukg";
    UnderlyingAsset["UMA"] = "uma";
    UnderlyingAsset["UMEE"] = "umee";
    UnderlyingAsset["UNB"] = "unb";
    UnderlyingAsset["UNI"] = "uni";
    UnderlyingAsset["UOS"] = "uos";
    UnderlyingAsset["UP"] = "up";
    UnderlyingAsset["UPBTC"] = "upbtc";
    UnderlyingAsset["UPP"] = "upp";
    UnderlyingAsset["UPT"] = "upt";
    UnderlyingAsset["UPUSD"] = "upusd";
    UnderlyingAsset["UQC"] = "uqc";
    UnderlyingAsset["URHD"] = "urhd";
    UnderlyingAsset["USDC"] = "usdc";
    UnderlyingAsset["USDH"] = "usdh";
    // Also available on EOS
    UnderlyingAsset["USDT"] = "usdt";
    UnderlyingAsset["USDX"] = "usdx";
    UnderlyingAsset["USG"] = "usg";
    UnderlyingAsset["USPX"] = "uspx";
    UnderlyingAsset["UST"] = "ust";
    UnderlyingAsset["USX"] = "usx";
    UnderlyingAsset["UTK"] = "utk";
    UnderlyingAsset["UTK1"] = "utk1";
    UnderlyingAsset["UXB"] = "uxb";
    UnderlyingAsset["UXP"] = "uxp";
    UnderlyingAsset["VALOR"] = "valor";
    UnderlyingAsset["VCORE"] = "vcore";
    UnderlyingAsset["VDX"] = "vdx";
    UnderlyingAsset["VEGA"] = "vega";
    UnderlyingAsset["VEXT"] = "vext";
    UnderlyingAsset["VGX"] = "vgx";
    UnderlyingAsset["VISR"] = "visr";
    UnderlyingAsset["VRGX"] = "vrgx";
    UnderlyingAsset["VXC"] = "vxc";
    UnderlyingAsset["VI"] = "vi";
    UnderlyingAsset["VSP"] = "vsp";
    // Wrapped AAVE
    UnderlyingAsset["WAAVE"] = "waave";
    UnderlyingAsset["WAFL"] = "wafl";
    // Wrapped AAVAX
    UnderlyingAsset["WAVAX"] = "wavax";
    UnderlyingAsset["WAVES"] = "waves";
    UnderlyingAsset["WAX"] = "wax";
    UnderlyingAsset["WABI"] = "wabi";
    // Wrapped BNB
    UnderlyingAsset["WBNB"] = "wbnb";
    UnderlyingAsset["WOO"] = "woo";
    UnderlyingAsset["WTK"] = "wtk";
    UnderlyingAsset["WBTC"] = "wbtc";
    UnderlyingAsset["WDAIV2"] = "wdaiv2";
    UnderlyingAsset["WDOGE"] = "wdoge";
    UnderlyingAsset["WCFG"] = "wcfg";
    UnderlyingAsset["WEC"] = "wec";
    UnderlyingAsset["WET"] = "wet";
    UnderlyingAsset["WETH"] = "weth";
    UnderlyingAsset["WFLOW"] = "wflow";
    UnderlyingAsset["WFFT"] = "wfft";
    UnderlyingAsset["WHALE"] = "whale";
    UnderlyingAsset["WHT"] = "wht";
    UnderlyingAsset["WILD"] = "wild";
    UnderlyingAsset["WNXM"] = "wnxm";
    UnderlyingAsset["WLD"] = "wld";
    UnderlyingAsset["WLUNA"] = "wluna";
    UnderlyingAsset["WLXT"] = "wlxt";
    // Wrapped SOL
    UnderlyingAsset["WSOL"] = "wsol";
    UnderlyingAsset["WSTETH"] = "wsteth";
    UnderlyingAsset["WPX"] = "wpx";
    UnderlyingAsset["WTC"] = "wtc";
    // USD Coin (Wormhole)
    UnderlyingAsset["WUSDC"] = "wusdc";
    UnderlyingAsset["WUSDCV2"] = "wusdvcv2";
    // Tether USD (Wormhole)
    UnderlyingAsset["WUSDTV2"] = "wusdtv2";
    UnderlyingAsset["WXRP"] = "wxrp";
    UnderlyingAsset["WXRPV0"] = "wxrpv0";
    UnderlyingAsset["WXT"] = "wxt";
    UnderlyingAsset["XAUD"] = "xaud";
    UnderlyingAsset["XAURY"] = "xaury";
    UnderlyingAsset["XAUT"] = "xaut";
    UnderlyingAsset["XAUTBEAR"] = "xautbear";
    UnderlyingAsset["XAUTBULL"] = "xautbull";
    UnderlyingAsset["XBGOLD"] = "xbgold";
    UnderlyingAsset["XCD"] = "xcd";
    UnderlyingAsset["XCN"] = "xcn";
    UnderlyingAsset["XDEFI"] = "xdefi";
    UnderlyingAsset["XEX"] = "xex";
    UnderlyingAsset["XLMBEAR"] = "xlmbear";
    UnderlyingAsset["XLMBULL"] = "xlmbull";
    UnderlyingAsset["XRL"] = "xrl";
    UnderlyingAsset["XRPBEAR"] = "xrpbear";
    UnderlyingAsset["XRPBULL"] = "xrpbull";
    UnderlyingAsset["XRPHEDGE"] = "xrphedge";
    UnderlyingAsset["XSGD"] = "xsgd";
    UnderlyingAsset["XSUSHI"] = "xsushi";
    UnderlyingAsset["XTP"] = "xtp";
    UnderlyingAsset["XTZBEAR"] = "xtzbear";
    UnderlyingAsset["XTZBULL"] = "xtzbull";
    UnderlyingAsset["XUSD"] = "xusd";
    UnderlyingAsset["YFDAI"] = "yfdai";
    UnderlyingAsset["YFI"] = "yfi";
    UnderlyingAsset["YFII"] = "yfii";
    UnderlyingAsset["YFL"] = "yfl";
    UnderlyingAsset["YGG"] = "ygg";
    UnderlyingAsset["YLD"] = "yld";
    UnderlyingAsset["YNG"] = "yng";
    UnderlyingAsset["YSEY"] = "ysey";
    UnderlyingAsset["ZARX"] = "zarx";
    UnderlyingAsset["ZBC"] = "zbc";
    UnderlyingAsset["ZBU"] = "zbu";
    UnderlyingAsset["ZCO"] = "zco";
    UnderlyingAsset["ZECBEAR"] = "zecbear";
    UnderlyingAsset["ZECBULL"] = "zecbull";
    UnderlyingAsset["ZIL"] = "zil";
    UnderlyingAsset["ZIX"] = "zix";
    UnderlyingAsset["ZLW"] = "zlw";
    UnderlyingAsset["ZMT"] = "zmt";
    UnderlyingAsset["ZOOM"] = "zoom";
    UnderlyingAsset["ZRX"] = "zrx";
    UnderlyingAsset["ZUSD"] = "zusd";
    UnderlyingAsset["xlm:BST-GADDFE4R72YUP2AOEL67OHZN3GJQYPC3VE734N2XFMEGRR2L32CZ3XYZ"] = "xlm:BST-GADDFE4R72YUP2AOEL67OHZN3GJQYPC3VE734N2XFMEGRR2L32CZ3XYZ";
    UnderlyingAsset["xlm:VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M"] = "xlm:VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M";
    UnderlyingAsset["xlm:SLT-GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP"] = "xlm:SLT-GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP";
    UnderlyingAsset["xlm:USD-GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX"] = "xlm:USD-GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX";
    UnderlyingAsset["xlm:ETH-GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5"] = "xlm:ETH-GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5";
    UnderlyingAsset["xlm:WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT"] = "xlm:WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT";
    UnderlyingAsset["xlm:USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN"] = "xlm:USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN";
    UnderlyingAsset["xlm:SIX-GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z"] = "xlm:SIX-GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z";
    UnderlyingAsset["xlm:BRLT-GCHQ3F2BF5P74DMDNOOGHT5DUCKC773AW5DTOFINC26W4KGYFPYDPRSO"] = "xlm:BRLT-GCHQ3F2BF5P74DMDNOOGHT5DUCKC773AW5DTOFINC26W4KGYFPYDPRSO";
    UnderlyingAsset["xlm:ARST-GCSAZVWXZKWS4XS223M5F54H2B6XPIIXZZGP7KEAIU6YSL5HDRGCI3DG"] = "xlm:ARST-GCSAZVWXZKWS4XS223M5F54H2B6XPIIXZZGP7KEAIU6YSL5HDRGCI3DG";
    UnderlyingAsset["xlm:AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA"] = "xlm:AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA";
    UnderlyingAsset["xlm:EURC-GDHU6WRG4IEQXM5NZ4BMPKOXHW76MZM4Y2IEMFDVXBSDP6SJY4ITNPP2"] = "xlm:EURC-GDHU6WRG4IEQXM5NZ4BMPKOXHW76MZM4Y2IEMFDVXBSDP6SJY4ITNPP2";
    // Eth NFTs
    // generic NFTs
    UnderlyingAsset["erc721:token"] = "erc721:token";
    UnderlyingAsset["erc1155:token"] = "erc1155:token";
    UnderlyingAsset["nonstandard:token"] = "nonstandard:token";
    // Test Eth NFTs
    UnderlyingAsset["terc721:token"] = "terc721:token";
    UnderlyingAsset["terc1155:token"] = "terc1155:token";
    UnderlyingAsset["tnonstandard:token"] = "tnonstandard:token";
    // Algorand mainnet tokens
    UnderlyingAsset["algo:USDC-31566704"] = "algo:USDC-31566704";
    UnderlyingAsset["algo:USDt-312769"] = "algo:USDt-312769";
    UnderlyingAsset["algo:MCAU-6547014"] = "algo:MCAU-6547014";
    UnderlyingAsset["algo:QCAD-84507107"] = "algo:QCAD-84507107";
    UnderlyingAsset["algo:VCAD-438505559"] = "algo:VCAD-438505559";
    // Kovan-only ERC20 tokens
    UnderlyingAsset["TEST"] = "test";
    UnderlyingAsset["SCHZ"] = "schz";
    UnderlyingAsset["CAT"] = "cat";
    // Stellar testnet tokens
    UnderlyingAsset["txlm:BST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L"] = "txlm:BST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L";
    UnderlyingAsset["txlm:TST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L"] = "txlm:TST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L";
    // Algorand testnet tokens
    UnderlyingAsset["talgo:USON-16026728"] = "talgo:USON-16026728";
    UnderlyingAsset["talgo:SPRW-16026732"] = "talgo:SPRW-16026732";
    UnderlyingAsset["talgo:KAL-16026733"] = "talgo:KAL-16026733";
    UnderlyingAsset["talgo:USDC-10458941"] = "talgo:USDC-10458941";
    UnderlyingAsset["talgo:USDt-180447"] = "talgo:USDt-180447";
    UnderlyingAsset["talgo:JPT-162085446"] = "talgo:JPT-162085446";
    // EOS tokens
    UnderlyingAsset["CHEX"] = "chex";
    UnderlyingAsset["IQ"] = "iq";
    UnderlyingAsset["EOS_BOX"] = "eos:box";
    // Avax Token ERC-20
    UnderlyingAsset["avaxc:qi"] = "avaxc:qi";
    UnderlyingAsset["avaxc:xava"] = "avaxc:xava";
    UnderlyingAsset["avaxc:klo"] = "avaxc:klo";
    UnderlyingAsset["avaxc:joe"] = "avaxc:joe";
    UnderlyingAsset["avaxc:png"] = "avaxc:png";
    UnderlyingAsset["avaxc:usdt"] = "avaxc:usdt";
    UnderlyingAsset["avaxc:usdc"] = "avaxc:usdc";
    UnderlyingAsset["avaxc:link"] = "avaxc:link";
    UnderlyingAsset["avaxc:cai"] = "avaxc:cai";
    UnderlyingAsset["avaxc:aave"] = "avaxc:aave";
    UnderlyingAsset["avaxc:btc"] = "avaxc:btc";
    UnderlyingAsset["avaxc:dai"] = "avaxc:dai";
    UnderlyingAsset["avaxc:wbtc"] = "avaxc:wbtc";
    UnderlyingAsset["avaxc:weth"] = "avaxc:weth";
    UnderlyingAsset["tavaxc:opm"] = "tavaxc:opm";
    // polygon Token ERC-20
    UnderlyingAsset["polygon:usdc"] = "polygon:usdc";
    UnderlyingAsset["polygon:usdt"] = "polygon:usdt";
    UnderlyingAsset["polygon:weth"] = "polygon:weth";
    UnderlyingAsset["polygon:wbtc"] = "polygon:wbtc";
    UnderlyingAsset["polygon:sand"] = "polygon:sand";
    UnderlyingAsset["polygon:dai"] = "polygon:dai";
    UnderlyingAsset["polygon:woo"] = "polygon:woo";
    UnderlyingAsset["polygon:aave"] = "polygon:aave";
    UnderlyingAsset["polygon:link"] = "polygon:link";
    UnderlyingAsset["polygon:tusd"] = "polygon:tusd";
    UnderlyingAsset["polygon:cel"] = "polygon:cel";
    UnderlyingAsset["polygon:busd"] = "polygon:busd";
    UnderlyingAsset["polygon:frax"] = "polygon:frax";
    UnderlyingAsset["polygon:crv"] = "polygon:crv";
    UnderlyingAsset["polygon:uni"] = "polygon:uni";
    UnderlyingAsset["polygon:fcd"] = "polygon:fcd";
    UnderlyingAsset["polygon:ape"] = "polygon:ape";
    UnderlyingAsset["polygon:srm"] = "polygon:srm";
    UnderlyingAsset["polygon:fly"] = "polygon:fly";
    UnderlyingAsset["polygon:gfc"] = "polygon:gfc";
    UnderlyingAsset["polygon:rbw"] = "polygon:rbw";
    UnderlyingAsset["polygon:zed"] = "polygon:zed";
    UnderlyingAsset["polygon:vext"] = "polygon:vext";
    UnderlyingAsset["polygon:vcnt"] = "polygon:vcnt";
    UnderlyingAsset["polygon:sushi"] = "polygon:sushi";
    UnderlyingAsset["polygon:wmatic"] = "polygon:wmatic";
    UnderlyingAsset["polygon:1inch"] = "polygon:1inch";
    UnderlyingAsset["polygon:comp"] = "polygon:comp";
    UnderlyingAsset["polygon:sol"] = "polygon:sol";
    UnderlyingAsset["polygon:wavax"] = "polygon:wavax";
    UnderlyingAsset["polygon:wbnb"] = "polygon:wbnb";
    UnderlyingAsset["polygon:wftm"] = "polygon:wftm";
    UnderlyingAsset["polygon:yfi"] = "polygon:yfi";
    UnderlyingAsset["polygon:treta"] = "polygon:treta";
    // Polygon NFTs
    // generic NFTs
    UnderlyingAsset["erc721:polygontoken"] = "erc721:polygontoken";
    UnderlyingAsset["erc1155:polygontoken"] = "erc1155:polygontoken";
    // BSC Token BEP-20
    UnderlyingAsset["bsc:busd"] = "bsc:busd";
    UnderlyingAsset["bsc:ksm"] = "bsc:ksm";
    UnderlyingAsset["bsc:usdt"] = "bsc:usdt";
    UnderlyingAsset["bsc:vet"] = "bsc:vet";
    UnderlyingAsset["tbsc:busd"] = "tbsc:busd";
    // BSC NFTs
    // generic NFTs
    UnderlyingAsset["erc721:bsctoken"] = "erc721:bsctoken";
    UnderlyingAsset["erc1155:bsctoken"] = "erc1155:bsctoken";
    // Test BSC NFTs
    UnderlyingAsset["terc721:bsctoken"] = "terc721:bsctoken";
    UnderlyingAsset["terc1155:bsctoken"] = "terc1155:bsctoken";
    // Polygon testnet tokens
    UnderlyingAsset["tpolygon:derc20"] = "tpolygon:derc20";
    UnderlyingAsset["tpolygon:link"] = "tpolygon:link";
    UnderlyingAsset["tpolygon:name"] = "tpolygon:name";
    UnderlyingAsset["tpolygon:opm"] = "tpolygon:opm";
    // generic NFTs
    UnderlyingAsset["terc721:polygontoken"] = "terc721:polygontoken";
    UnderlyingAsset["terc1155:polygontoken"] = "terc1155:polygontoken";
    // Arbitrum mainnet tokens
    UnderlyingAsset["arbeth:link"] = "arbeth:link";
    // Arbitrum testnet tokens
    UnderlyingAsset["tarbeth:link"] = "tarbeth:link";
    UnderlyingAsset["ERC721"] = "erc721";
    UnderlyingAsset["ERC1155"] = "erc1155";
    UnderlyingAsset["NONSTANDARD"] = "nonstandard";
    // Cardano Token
    UnderlyingAsset["adaTestnetToken"] = "temporary-placeholder";
    // solana token
    UnderlyingAsset["3uejh-usdc"] = "3uejh-usdc";
    UnderlyingAsset["avax-usdc"] = "avax-usdc";
    UnderlyingAsset["bop-usdc"] = "bop-usdc";
    UnderlyingAsset["elu-usdt"] = "elu-usdt";
    UnderlyingAsset["fida-usdc"] = "fida-usdc";
    UnderlyingAsset["fida-usdt"] = "fida-usdt";
    UnderlyingAsset["ftt-ftt"] = "ftt-ftt";
    UnderlyingAsset["link-usdc"] = "link-usdc";
    UnderlyingAsset["lqid-usdc"] = "lqid-usdc";
    UnderlyingAsset["maticpo-usdc"] = "maticpo-usdc";
    UnderlyingAsset["msol-sol"] = "msol-sol";
    UnderlyingAsset["msol-usdc"] = "msol-usdc";
    UnderlyingAsset["prism-usdc"] = "prism-usdc";
    UnderlyingAsset["rendoge-usdc"] = "rendoge-usdc";
    UnderlyingAsset["shdw-usdc"] = "shdw-usdc";
    UnderlyingAsset["sol-wtust"] = "sol-wtust";
    UnderlyingAsset["srm-usdc"] = "srm-usdc";
    UnderlyingAsset["srmet-srm"] = "srmet-srm";
    UnderlyingAsset["sushi-usdc"] = "sushi-usdc";
    UnderlyingAsset["tuatlas"] = "tuatlas";
    UnderlyingAsset["tucope"] = "tucope";
    UnderlyingAsset["tulike"] = "tulike";
    UnderlyingAsset["tureal"] = "tureal";
    UnderlyingAsset["tusamo"] = "tusamo";
    UnderlyingAsset["usdt-usdc"] = "usdt-usdc";
    UnderlyingAsset["wbwbnb-usdc"] = "wbwbnb-usdc";
    UnderlyingAsset["wheth-usdc"] = "wheth-usdc";
    UnderlyingAsset["wtust-usdt"] = "wtust-usdt";
    UnderlyingAsset["xcope-usdc"] = "xcope-usdc";
    // XRP tokens
    UnderlyingAsset["txrp:tst-rP9jPyP5kyvFRb6ZiRghAGw5u8SGAmU4bd"] = "txrp:tst-rP9jPyP5kyvFRb6ZiRghAGw5u8SGAmU4bd";
})(UnderlyingAsset = exports.UnderlyingAsset || (exports.UnderlyingAsset = {}));
/**
 * This is the curve BitGo signs against with the user, backup and BitGo key.
 */
var KeyCurve;
(function (KeyCurve) {
    KeyCurve["Secp256k1"] = "secp256k1";
    KeyCurve["Ed25519"] = "ed25519";
    KeyCurve["BLS"] = "bls";
})(KeyCurve = exports.KeyCurve || (exports.KeyCurve = {}));
/**
 * This enum contains the base units for the coins that BitGo supports
 */
var BaseUnit;
(function (BaseUnit) {
    BaseUnit["ATOM"] = "uATOM";
    BaseUnit["ETH"] = "wei";
    BaseUnit["BTC"] = "satoshi";
    BaseUnit["BSC"] = "jager";
    BaseUnit["XLM"] = "stroop";
    BaseUnit["TRX"] = "sun";
    BaseUnit["HBAR"] = "tinybar";
    BaseUnit["ALGO"] = "microAlgo";
    BaseUnit["EOS"] = "eos";
    BaseUnit["SOL"] = "lamport";
    BaseUnit["ADA"] = "lovelace";
    BaseUnit["USD"] = "USD";
    BaseUnit["LTC"] = "microlitecoins";
    BaseUnit["DASH"] = "duff";
    BaseUnit["ZEC"] = "zatoshi";
    BaseUnit["CSPR"] = "mote";
    BaseUnit["DOT"] = "planck";
    BaseUnit["XRP"] = "drop";
    BaseUnit["XTZ"] = "micro xtz";
    BaseUnit["STX"] = "micro-STX";
    BaseUnit["SUI"] = "MIST";
    BaseUnit["TON"] = "nanoton";
    BaseUnit["NEAR"] = "yocto";
    BaseUnit["OFC"] = "ofcCoin";
    BaseUnit["OSMO"] = "uosmo";
    BaseUnit["FIAT"] = "fiatCoin";
    BaseUnit["TIA"] = "utia";
    BaseUnit["HASH"] = "nhash";
    BaseUnit["BLD"] = "ubld";
    BaseUnit["SEI"] = "usei";
    BaseUnit["INJECTIVE"] = "inj";
    BaseUnit["ZETA"] = "azeta";
    BaseUnit["KAVA"] = "ukava";
    BaseUnit["CORE"] = "ucore";
    BaseUnit["TESTCORE"] = "utestcore";
    BaseUnit["BERA"] = "abera";
    BaseUnit["ISLM"] = "aISLM";
})(BaseUnit = exports.BaseUnit || (exports.BaseUnit = {}));
class BaseCoin {
    constructor(options) {
        this.validateOptions(options);
        this.id = options.id;
        this.fullName = options.fullName;
        this.name = options.name;
        this.alias = options.alias;
        this.prefix = options.prefix;
        this.suffix = options.suffix;
        this.baseUnit = options.baseUnit;
        this.kind = options.kind;
        this.family = options.network.family;
        this.isToken = options.isToken;
        this.features = options.features;
        this.decimalPlaces = options.decimalPlaces;
        this.asset = options.asset;
        this.network = options.network;
        this.primaryKeyCurve = options.primaryKeyCurve;
    }
    /**
     * Ensures that the base coin constructor was passed a valid set of options.
     *
     * This includes checking that:
     * - All coin features of the new instance are allowed by the coin class
     * - No features required by the coin class are missing from the new instance
     * @param {BaseCoinConstructorOptions} options
     * @throws {DisallowedCoinFeatureError} if any of the coin features are not allowed for the coin class
     * @throws {MissingRequiredCoinFeatureError} if any features required by the coin class are missing
     */
    validateOptions(options) {
        const requiredFeatures = this.requiredFeatures();
        const disallowedFeatures = this.disallowedFeatures();
        const intersectionFeatures = Array.from(requiredFeatures).filter((feat) => disallowedFeatures.has(feat));
        if (intersectionFeatures.length > 0) {
            throw new errors_1.ConflictingCoinFeaturesError(options.name, intersectionFeatures);
        }
        for (const feature of options.features) {
            if (disallowedFeatures.has(feature)) {
                throw new errors_1.DisallowedCoinFeatureError(options.name, feature);
            }
            if (requiredFeatures.has(feature)) {
                requiredFeatures.delete(feature);
            }
        }
        if (requiredFeatures.size > 0) {
            // some required features were missing
            throw new errors_1.MissingRequiredCoinFeatureError(options.name, Array.from(requiredFeatures));
        }
        // assets require a valid uuid v4 id
        if (!BaseCoin.isValidUuidV4(options.id)) {
            throw new errors_1.InvalidIdError(options.name, options.id);
        }
    }
}
exports.BaseCoin = BaseCoin;
BaseCoin.isValidUuidV4 = (uuid) => {
    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    return uuidRegex.test(uuid);
};
//# sourceMappingURL=data:application/json;base64,